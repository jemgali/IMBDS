// node_modules/leaflet.pm/dist/leaflet.pm.min.js
!function(t) {
  var e = {};
  function n(r) {
    if (e[r]) return e[r].exports;
    var i = e[r] = { i: r, l: false, exports: {} };
    return t[r].call(i.exports, i, i.exports, n), i.l = true, i.exports;
  }
  n.m = t, n.c = e, n.d = function(t2, e2, r) {
    n.o(t2, e2) || Object.defineProperty(t2, e2, { configurable: false, enumerable: true, get: r });
  }, n.n = function(t2) {
    var e2 = t2 && t2.__esModule ? function() {
      return t2["default"];
    } : function() {
      return t2;
    };
    return n.d(e2, "a", e2), e2;
  }, n.o = function(t2, e2) {
    return Object.prototype.hasOwnProperty.call(t2, e2);
  }, n.p = "", n(n.s = 46);
}([function(t, e, n) {
  "use strict";
  e.a = function(t2) {
    var e2 = L.PM.activeLang;
    o()(s.a, e2) || (e2 = "en");
    return i()(s.a[e2], t2);
  }, e.b = function(t2) {
    return !function e2(t3) {
      return t3.filter(function(t4) {
        return ![null, "", void 0].includes(t4);
      }).reduce(function(t4, n2) {
        return t4.concat(Array.isArray(n2) ? e2(n2) : n2);
      }, []);
    }(t2).length;
  };
  var r = n(37), i = n.n(r), a = n(138), o = n.n(a), s = n(36);
}, function(t, e, n) {
  "use strict";
  var r = n(40), i = L.Class.extend({ includes: [r.a], options: { snappable: true, snapDistance: 20, tooltips: true, cursorMarker: true, finishOnDoubleClick: false, finishOn: null, allowSelfIntersection: true, templineStyle: {}, hintlineStyle: { color: "#3388ff", dashArray: "5,5" }, markerStyle: { draggable: true } }, initialize: function(t2) {
    var e2 = this;
    this._map = t2, this.shapes = ["Marker", "CircleMarker", "Line", "Polygon", "Rectangle", "Circle", "Cut"], this.shapes.forEach(function(t3) {
      e2[t3] = new L.PM.Draw[t3](e2._map);
    });
  }, setPathOptions: function(t2) {
    this.options.pathOptions = t2;
  }, getShapes: function() {
    return this.shapes;
  }, enable: function(t2, e2) {
    if (!t2) throw new Error("Error: Please pass a shape as a parameter. Possible shapes are: ".concat(this.getShapes().join(",")));
    this.disable(), this[t2].enable(e2);
  }, disable: function() {
    var t2 = this;
    this.shapes.forEach(function(e2) {
      t2[e2].disable();
    });
  }, addControls: function() {
    var t2 = this;
    this.shapes.forEach(function(e2) {
      t2[e2].addButton();
    });
  } });
  e.a = i;
}, function(t, e, n) {
  "use strict";
  var r = n(40), i = n(151), a = L.Class.extend({ includes: [i.a, r.a], options: { snappable: true, snapDistance: 20, allowSelfIntersection: true, draggable: true }, isPolygon: function() {
    return this._layer instanceof L.Polygon;
  } });
  e.a = a;
}, function(t, e) {
  t.exports = function(t2) {
    var e2 = typeof t2;
    return null != t2 && ("object" == e2 || "function" == e2);
  };
}, function(t, e, n) {
  var r = n(25), i = "object" == typeof self && self && self.Object === Object && self, a = r || i || Function("return this")();
  t.exports = a;
}, function(t, e) {
  t.exports = function(t2) {
    return null != t2 && "object" == typeof t2;
  };
}, function(t, e) {
  var n = Array.isArray;
  t.exports = n;
}, function(t, e, n) {
  var r = n(16), i = n(66), a = n(67), o = "[object Null]", s = "[object Undefined]", l = r ? r.toStringTag : void 0;
  t.exports = function(t2) {
    return null == t2 ? t2 === void 0 ? s : o : l && l in Object(t2) ? i(t2) : a(t2);
  };
}, function(t, e, n) {
  "use strict";
  function r(t2, e2, n2) {
    void 0 === n2 && (n2 = {});
    var r2 = { type: "Feature" };
    return (0 === n2.id || n2.id) && (r2.id = n2.id), n2.bbox && (r2.bbox = n2.bbox), r2.properties = e2 || {}, r2.geometry = t2, r2;
  }
  function i(t2, e2, n2) {
    return void 0 === n2 && (n2 = {}), r({ type: "Point", coordinates: t2 }, e2, n2);
  }
  function a(t2, e2, n2) {
    void 0 === n2 && (n2 = {});
    for (var i2 = 0, a2 = t2; i2 < a2.length; i2++) {
      var o2 = a2[i2];
      if (o2.length < 4) throw new Error("Each LinearRing of a Polygon must have 4 or more Positions.");
      for (var s2 = 0; s2 < o2[o2.length - 1].length; s2++) if (o2[o2.length - 1][s2] !== o2[0][s2]) throw new Error("First and last Position are not equivalent.");
    }
    return r({ type: "Polygon", coordinates: t2 }, e2, n2);
  }
  function o(t2, e2, n2) {
    if (void 0 === n2 && (n2 = {}), t2.length < 2) throw new Error("coordinates must be an array of two or more positions");
    return r({ type: "LineString", coordinates: t2 }, e2, n2);
  }
  function s(t2, e2) {
    void 0 === e2 && (e2 = {});
    var n2 = { type: "FeatureCollection" };
    return e2.id && (n2.id = e2.id), e2.bbox && (n2.bbox = e2.bbox), n2.features = t2, n2;
  }
  function l(t2, e2, n2) {
    return void 0 === n2 && (n2 = {}), r({ type: "MultiLineString", coordinates: t2 }, e2, n2);
  }
  function u(t2, e2, n2) {
    return void 0 === n2 && (n2 = {}), r({ type: "MultiPoint", coordinates: t2 }, e2, n2);
  }
  function c(t2, e2, n2) {
    return void 0 === n2 && (n2 = {}), r({ type: "MultiPolygon", coordinates: t2 }, e2, n2);
  }
  function h(t2, n2) {
    void 0 === n2 && (n2 = "kilometers");
    var r2 = e.factors[n2];
    if (!r2) throw new Error(n2 + " units is invalid");
    return t2 * r2;
  }
  function p(t2, n2) {
    void 0 === n2 && (n2 = "kilometers");
    var r2 = e.factors[n2];
    if (!r2) throw new Error(n2 + " units is invalid");
    return t2 / r2;
  }
  function f(t2) {
    return 180 * (t2 % (2 * Math.PI)) / Math.PI;
  }
  function d(t2) {
    return !isNaN(t2) && null !== t2 && !Array.isArray(t2) && !/^\s*$/.test(t2);
  }
  Object.defineProperty(e, "__esModule", { value: true }), e.earthRadius = 63710088e-1, e.factors = { centimeters: 100 * e.earthRadius, centimetres: 100 * e.earthRadius, degrees: e.earthRadius / 111325, feet: 3.28084 * e.earthRadius, inches: 39.37 * e.earthRadius, kilometers: e.earthRadius / 1e3, kilometres: e.earthRadius / 1e3, meters: e.earthRadius, metres: e.earthRadius, miles: e.earthRadius / 1609.344, millimeters: 1e3 * e.earthRadius, millimetres: 1e3 * e.earthRadius, nauticalmiles: e.earthRadius / 1852, radians: 1, yards: e.earthRadius / 1.0936 }, e.unitsFactors = { centimeters: 100, centimetres: 100, degrees: 1 / 111325, feet: 3.28084, inches: 39.37, kilometers: 1e-3, kilometres: 1e-3, meters: 1, metres: 1, miles: 1 / 1609.344, millimeters: 1e3, millimetres: 1e3, nauticalmiles: 1 / 1852, radians: 1 / e.earthRadius, yards: 1 / 1.0936 }, e.areaFactors = { acres: 247105e-9, centimeters: 1e4, centimetres: 1e4, feet: 10.763910417, inches: 1550.003100006, kilometers: 1e-6, kilometres: 1e-6, meters: 1, metres: 1, miles: 386e-9, millimeters: 1e6, millimetres: 1e6, yards: 1.195990046 }, e.feature = r, e.geometry = function(t2, e2, n2) {
    switch (void 0 === n2 && (n2 = {}), t2) {
      case "Point":
        return i(e2).geometry;
      case "LineString":
        return o(e2).geometry;
      case "Polygon":
        return a(e2).geometry;
      case "MultiPoint":
        return u(e2).geometry;
      case "MultiLineString":
        return l(e2).geometry;
      case "MultiPolygon":
        return c(e2).geometry;
      default:
        throw new Error(t2 + " is invalid");
    }
  }, e.point = i, e.points = function(t2, e2, n2) {
    return void 0 === n2 && (n2 = {}), s(t2.map(function(t3) {
      return i(t3, e2);
    }), n2);
  }, e.polygon = a, e.polygons = function(t2, e2, n2) {
    return void 0 === n2 && (n2 = {}), s(t2.map(function(t3) {
      return a(t3, e2);
    }), n2);
  }, e.lineString = o, e.lineStrings = function(t2, e2, n2) {
    return void 0 === n2 && (n2 = {}), s(t2.map(function(t3) {
      return o(t3, e2);
    }), n2);
  }, e.featureCollection = s, e.multiLineString = l, e.multiPoint = u, e.multiPolygon = c, e.geometryCollection = function(t2, e2, n2) {
    return void 0 === n2 && (n2 = {}), r({ type: "GeometryCollection", geometries: t2 }, e2, n2);
  }, e.round = function(t2, e2) {
    if (void 0 === e2 && (e2 = 0), e2 && !(e2 >= 0)) throw new Error("precision must be a positive number");
    var n2 = Math.pow(10, e2 || 0);
    return Math.round(t2 * n2) / n2;
  }, e.radiansToLength = h, e.lengthToRadians = p, e.lengthToDegrees = function(t2, e2) {
    return f(p(t2, e2));
  }, e.bearingToAzimuth = function(t2) {
    var e2 = t2 % 360;
    return e2 < 0 && (e2 += 360), e2;
  }, e.radiansToDegrees = f, e.degreesToRadians = function(t2) {
    return t2 % 360 * Math.PI / 180;
  }, e.convertLength = function(t2, e2, n2) {
    if (void 0 === e2 && (e2 = "kilometers"), void 0 === n2 && (n2 = "kilometers"), !(t2 >= 0)) throw new Error("length must be a positive number");
    return h(p(t2, e2), n2);
  }, e.convertArea = function(t2, n2, r2) {
    if (void 0 === n2 && (n2 = "meters"), void 0 === r2 && (r2 = "kilometers"), !(t2 >= 0)) throw new Error("area must be a positive number");
    var i2 = e.areaFactors[n2];
    if (!i2) throw new Error("invalid original units");
    var a2 = e.areaFactors[r2];
    if (!a2) throw new Error("invalid final units");
    return t2 / i2 * a2;
  }, e.isNumber = d, e.isObject = function(t2) {
    return !!t2 && t2.constructor === Object;
  }, e.validateBBox = function(t2) {
    if (!t2) throw new Error("bbox is required");
    if (!Array.isArray(t2)) throw new Error("bbox must be an Array");
    if (4 !== t2.length && 6 !== t2.length) throw new Error("bbox must be an Array of 4 or 6 numbers");
    t2.forEach(function(t3) {
      if (!d(t3)) throw new Error("bbox must only contain numbers");
    });
  }, e.validateId = function(t2) {
    if (!t2) throw new Error("id is required");
    if (-1 === ["string", "number"].indexOf(typeof t2)) throw new Error("id must be a number or a string");
  }, e.radians2degrees = function() {
    throw new Error("method has been renamed to `radiansToDegrees`");
  }, e.degrees2radians = function() {
    throw new Error("method has been renamed to `degreesToRadians`");
  }, e.distanceToDegrees = function() {
    throw new Error("method has been renamed to `lengthToDegrees`");
  }, e.distanceToRadians = function() {
    throw new Error("method has been renamed to `lengthToRadians`");
  }, e.radiansToDistance = function() {
    throw new Error("method has been renamed to `radiansToLength`");
  }, e.bearingToAngle = function() {
    throw new Error("method has been renamed to `bearingToAzimuth`");
  }, e.convertDistance = function() {
    throw new Error("method has been renamed to `convertLength`");
  };
}, function(t, e, n) {
  var r = n(54), i = n(55), a = n(56), o = n(57), s = n(58);
  function l(t2) {
    var e2 = -1, n2 = null == t2 ? 0 : t2.length;
    for (this.clear(); ++e2 < n2; ) {
      var r2 = t2[e2];
      this.set(r2[0], r2[1]);
    }
  }
  l.prototype.clear = r, l.prototype["delete"] = i, l.prototype.get = a, l.prototype.has = o, l.prototype.set = s, t.exports = l;
}, function(t, e, n) {
  var r = n(11);
  t.exports = function(t2, e2) {
    for (var n2 = t2.length; n2--; ) if (r(t2[n2][0], e2)) return n2;
    return -1;
  };
}, function(t, e) {
  t.exports = function(t2, e2) {
    return t2 === e2 || t2 != t2 && e2 != e2;
  };
}, function(t, e, n) {
  var r = n(14)(Object, "create");
  t.exports = r;
}, function(t, e, n) {
  var r = n(80);
  t.exports = function(t2, e2) {
    var n2 = t2.__data__;
    return r(e2) ? n2["string" == typeof e2 ? "string" : "hash"] : n2.map;
  };
}, function(t, e, n) {
  var r = n(64), i = n(71);
  t.exports = function(t2, e2) {
    var n2 = i(t2, e2);
    return r(n2) ? n2 : void 0;
  };
}, function(t, e, n) {
  var r = n(7), i = n(3), a = "[object AsyncFunction]", o = "[object Function]", s = "[object GeneratorFunction]", l = "[object Proxy]";
  t.exports = function(t2) {
    if (!i(t2)) return false;
    var e2 = r(t2);
    return e2 == o || e2 == s || e2 == a || e2 == l;
  };
}, function(t, e, n) {
  var r = n(4).Symbol;
  t.exports = r;
}, function(t, e, n) {
  var r = n(28);
  t.exports = function(t2, e2, n2) {
    "__proto__" == e2 && r ? r(t2, e2, { configurable: true, enumerable: true, value: n2, writable: true }) : t2[e2] = n2;
  };
}, function(t, e) {
  t.exports = function(t2) {
    return t2.webpackPolyfill || (t2.deprecate = function() {
    }, t2.paths = [], t2.children || (t2.children = []), Object.defineProperty(t2, "loaded", { enumerable: true, get: function() {
      return t2.l;
    } }), Object.defineProperty(t2, "id", { enumerable: true, get: function() {
      return t2.i;
    } }), t2.webpackPolyfill = 1), t2;
  };
}, function(t, e, n) {
  var r = n(95), i = n(5), a = Object.prototype, o = a.hasOwnProperty, s = a.propertyIsEnumerable, l = r(/* @__PURE__ */ function() {
    return arguments;
  }()) ? r : function(t2) {
    return i(t2) && o.call(t2, "callee") && !s.call(t2, "callee");
  };
  t.exports = l;
}, function(t, e, n) {
  var r = n(15), i = n(21);
  t.exports = function(t2) {
    return null != t2 && i(t2.length) && !r(t2);
  };
}, function(t, e) {
  var n = 9007199254740991;
  t.exports = function(t2) {
    return "number" == typeof t2 && t2 > -1 && t2 % 1 == 0 && t2 <= n;
  };
}, function(t, e) {
  var n = 9007199254740991, r = /^(?:0|[1-9]\d*)$/;
  t.exports = function(t2, e2) {
    var i = typeof t2;
    return !!(e2 = null == e2 ? n : e2) && ("number" == i || "symbol" != i && r.test(t2)) && t2 > -1 && t2 % 1 == 0 && t2 < e2;
  };
}, function(t, e, n) {
  var r = n(7), i = n(5), a = "[object Symbol]";
  t.exports = function(t2) {
    return "symbol" == typeof t2 || i(t2) && r(t2) == a;
  };
}, function(t, e, n) {
  var r = n(14)(n(4), "Map");
  t.exports = r;
}, function(t, e, n) {
  (function(e2) {
    var n2 = "object" == typeof e2 && e2 && e2.Object === Object && e2;
    t.exports = n2;
  }).call(e, n(65));
}, function(t, e, n) {
  var r = n(72), i = n(79), a = n(81), o = n(82), s = n(83);
  function l(t2) {
    var e2 = -1, n2 = null == t2 ? 0 : t2.length;
    for (this.clear(); ++e2 < n2; ) {
      var r2 = t2[e2];
      this.set(r2[0], r2[1]);
    }
  }
  l.prototype.clear = r, l.prototype["delete"] = i, l.prototype.get = a, l.prototype.has = o, l.prototype.set = s, t.exports = l;
}, function(t, e, n) {
  var r = n(17), i = n(11);
  t.exports = function(t2, e2, n2) {
    (n2 === void 0 || i(t2[e2], n2)) && (n2 !== void 0 || e2 in t2) || r(t2, e2, n2);
  };
}, function(t, e, n) {
  var r = n(14), i = function() {
    try {
      var t2 = r(Object, "defineProperty");
      return t2({}, "", {}), t2;
    } catch (e2) {
    }
  }();
  t.exports = i;
}, function(t, e, n) {
  var r = n(94)(Object.getPrototypeOf, Object);
  t.exports = r;
}, function(t, e) {
  var n = Object.prototype;
  t.exports = function(t2) {
    var e2 = t2 && t2.constructor;
    return t2 === ("function" == typeof e2 && e2.prototype || n);
  };
}, function(t, e, n) {
  (function(t2) {
    var r = n(4), i = n(97), a = "object" == typeof e && e && !e.nodeType && e, o = a && "object" == typeof t2 && t2 && !t2.nodeType && t2, s = o && o.exports === a ? r.Buffer : void 0, l = (s ? s.isBuffer : void 0) || i;
    t2.exports = l;
  }).call(e, n(18)(t));
}, function(t, e, n) {
  var r = n(99), i = n(100), a = n(101), o = a && a.isTypedArray, s = o ? i(o) : r;
  t.exports = s;
}, function(t, e) {
  t.exports = function(t2, e2) {
    if (("constructor" !== e2 || "function" != typeof t2[e2]) && "__proto__" != e2) return t2[e2];
  };
}, function(t, e, n) {
  var r = n(105), i = n(107), a = n(20);
  t.exports = function(t2) {
    return a(t2) ? r(t2, true) : i(t2);
  };
}, function(t, e) {
  t.exports = function(t2) {
    return t2;
  };
}, function(t, e, n) {
  "use strict";
  var r = n(118), i = n.n(r), a = n(119), o = n.n(a), s = n(120), l = n.n(s), u = n(121), c = n.n(u), h = n(122), p = n.n(h), f = n(123), d = n.n(f), g = n(124), _ = n.n(g), m = n(125), y = n.n(m), v = n(126), b = n.n(v), L2 = n(127), k = n.n(L2);
  e.a = { en: i.a, de: o.a, it: l.a, ro: c.a, ru: p.a, es: d.a, nl: _.a, fr: y.a, pt_br: k.a, zh: b.a };
}, function(t, e, n) {
  var r = n(130);
  t.exports = function(t2, e2, n2) {
    var i = null == t2 ? void 0 : r(t2, e2);
    return i === void 0 ? n2 : i;
  };
}, function(t, e, n) {
  var r = n(6), i = n(131), a = n(132), o = n(135);
  t.exports = function(t2, e2) {
    return r(t2) ? t2 : i(t2, e2) ? [t2] : a(o(t2));
  };
}, function(t, e, n) {
  var r = n(23), i = 1 / 0;
  t.exports = function(t2) {
    if ("string" == typeof t2 || r(t2)) return t2;
    var e2 = t2 + "";
    return "0" == e2 && 1 / t2 == -i ? "-0" : e2;
  };
}, function(t, e, n) {
  "use strict";
  var r = n(41), i = { _initSnappableMarkers: function() {
    this.options.snapDistance = this.options.snapDistance || 30, this._assignEvents(this._markers), this._layer.off("pm:dragstart", this._unsnap, this), this._layer.on("pm:dragstart", this._unsnap, this);
  }, _assignEvents: function(t2) {
    var e2 = this;
    t2.forEach(function(t3) {
      Array.isArray(t3) ? e2._assignEvents(t3) : (t3.off("drag", e2._handleSnapping, e2), t3.on("drag", e2._handleSnapping, e2), t3.off("dragend", e2._cleanupSnapping, e2), t3.on("dragend", e2._cleanupSnapping, e2));
    });
  }, _unsnap: function() {
    delete this._snapLatLng;
  }, _cleanupSnapping: function() {
    delete this._snapList, this._map.off("pm:remove", this._handleSnapLayerRemoval, this), this.debugIndicatorLines && this.debugIndicatorLines.forEach(function(t2) {
      t2.remove();
    });
  }, _handleSnapLayerRemoval: function(t2) {
    var e2 = t2.layer, n2 = this._snapList.findIndex(function(t3) {
      return t3._leaflet_id === e2._leaflet_id;
    });
    this._snapList.splice(n2, 1);
  }, _handleSnapping: function(t2) {
    var e2 = this;
    if (t2.originalEvent.altKey) return false;
    if (this._snapList === void 0 && this._createSnapList(t2), this._snapList.length <= 0) return false;
    var n2, r2 = t2.target, i2 = this._calcClosestLayer(r2.getLatLng(), this._snapList), a = i2.layer instanceof L.Marker || i2.layer instanceof L.CircleMarker;
    n2 = a ? i2.latlng : this._checkPrioritiySnapping(i2);
    var o = this.options.snapDistance, s = { marker: r2, snapLatLng: n2, segment: i2.segment, layer: this._layer, layerInteractedWith: i2.layer, distance: i2.distance };
    if (s.marker.fire("pm:snapdrag", s), this._layer.fire("pm:snapdrag", s), i2.distance < o) {
      r2.setLatLng(n2), r2._snapped = true;
      var l = this._snapLatLng || {}, u = n2 || {};
      l.lat === u.lat && l.lng === u.lng || (e2._snapLatLng = n2, r2.fire("pm:snap", s), e2._layer.fire("pm:snap", s));
    } else this._snapLatLng && (this._unsnap(s), r2._snapped = false, s.marker.fire("pm:unsnap", s), this._layer.fire("pm:unsnap", s));
    return true;
  }, _checkPrioritiySnapping: function(t2) {
    var e2, n2 = this._map, i2 = t2.segment[0], a = t2.segment[1], o = t2.latlng, s = this._getDistance(n2, i2, o), l = this._getDistance(n2, a, o), u = s < l ? i2 : a, c = s < l ? s : l;
    if (this.options.snapMiddle) {
      var h = r.a.calcMiddleLatLng(n2, i2, a), p = this._getDistance(n2, h, o);
      p < s && p < l && (u = h, c = p);
    }
    return e2 = c < this.options.snapDistance ? u : o, Object.assign({}, e2);
  }, _createSnapList: function() {
    var t2 = this, e2 = [], n2 = [], r2 = this._map;
    r2.off("pm:remove", this._handleSnapLayerRemoval, this), r2.on("pm:remove", this._handleSnapLayerRemoval, this), r2.eachLayer(function(t3) {
      if ((t3 instanceof L.Polyline || t3 instanceof L.Marker || t3 instanceof L.CircleMarker) && true !== t3.options.snapIgnore) {
        e2.push(t3);
        var r3 = L.polyline([], { color: "red", pmIgnore: true });
        r3._pmTempLayer = true, n2.push(r3);
      }
    }), e2 = (e2 = (e2 = e2.filter(function(e3) {
      return t2._layer !== e3;
    })).filter(function(t3) {
      return t3._latlng || t3._latlngs && t3._latlngs.length > 0;
    })).filter(function(t3) {
      return !t3._pmTempLayer;
    }), this._otherSnapLayers ? this._snapList = e2.concat(this._otherSnapLayers) : this._snapList = e2, this.debugIndicatorLines = n2;
  }, _calcClosestLayer: function(t2, e2) {
    var n2 = this, r2 = {};
    return e2.forEach(function(e3, i2) {
      var a = n2._calcLayerDistances(t2, e3);
      n2.debugIndicatorLines[i2].setLatLngs([t2, a.latlng]), (r2.distance === void 0 || a.distance < r2.distance) && ((r2 = a).layer = e3);
    }), r2;
  }, _calcLayerDistances: function(t2, e2) {
    var n2, r2, i2 = this, a = this._map, o = e2 instanceof L.Marker || e2 instanceof L.CircleMarker, s = e2 instanceof L.Polygon, l = t2, u = o ? e2.getLatLng() : e2.getLatLngs();
    if (o) return { latlng: Object.assign({}, u), distance: this._getDistance(a, u, l) };
    !function h(t3) {
      t3.forEach(function(e3, o2) {
        if (Array.isArray(e3)) h(e3);
        else {
          var u2, c2 = e3;
          u2 = s ? o2 + 1 === t3.length ? 0 : o2 + 1 : o2 + 1 === t3.length ? void 0 : o2 + 1;
          var p = t3[u2];
          if (p) {
            var f = i2._getDistanceToSegment(a, l, c2, p);
            (r2 === void 0 || f < r2) && (r2 = f, n2 = [c2, p]);
          }
        }
      });
    }(u);
    var c = this._getClosestPointOnSegment(a, t2, n2[0], n2[1]);
    return { latlng: Object.assign({}, c), segment: n2, distance: r2 };
  }, _getClosestPointOnSegment: function(t2, e2, n2, r2) {
    var i2 = t2.getMaxZoom();
    i2 === Infinity && (i2 = t2.getZoom());
    var a = t2.project(e2, i2), o = t2.project(n2, i2), s = t2.project(r2, i2), l = L.LineUtil.closestPointOnSegment(a, o, s);
    return t2.unproject(l, i2);
  }, _getDistanceToSegment: function(t2, e2, n2, r2) {
    var i2 = t2.latLngToLayerPoint(e2), a = t2.latLngToLayerPoint(n2), o = t2.latLngToLayerPoint(r2);
    return L.LineUtil.pointToSegmentDistance(i2, a, o);
  }, _getDistance: function(t2, e2, n2) {
    return t2.latLngToLayerPoint(e2).distanceTo(t2.latLngToLayerPoint(n2));
  } };
  e.a = i;
}, function(t, e, n) {
  "use strict";
  e.a = { calcMiddleLatLng: function(t2, e2, n2) {
    var r = t2.project(e2), i = t2.project(n2);
    return t2.unproject(r._add(i)._divideBy(2));
  } };
}, function(t, e, n) {
  "use strict";
  Object.defineProperty(e, "__esModule", { value: true });
  var r = n(8);
  function i(t2, e2, n2, r2, i2, a, o, s) {
    var l, u, c, h, p = { x: null, y: null, onLine1: false, onLine2: false };
    return 0 === (l = (s - a) * (n2 - t2) - (o - i2) * (r2 - e2)) ? null !== p.x && null !== p.y && p : (h = (n2 - t2) * (u = e2 - a) - (r2 - e2) * (c = t2 - i2), u = ((o - i2) * u - (s - a) * c) / l, c = h / l, p.x = t2 + u * (n2 - t2), p.y = e2 + u * (r2 - e2), u >= 0 && u <= 1 && (p.onLine1 = true), c >= 0 && c <= 1 && (p.onLine2 = true), !(!p.onLine1 || !p.onLine2) && [p.x, p.y]);
  }
  e["default"] = function(t2) {
    var e2, n2, a = { type: "FeatureCollection", features: [] };
    if ("LineString" === (n2 = "Feature" === t2.type ? t2.geometry : t2).type) e2 = [n2.coordinates];
    else if ("MultiLineString" === n2.type) e2 = n2.coordinates;
    else if ("MultiPolygon" === n2.type) e2 = [].concat.apply([], n2.coordinates);
    else {
      if ("Polygon" !== n2.type) throw new Error("Input must be a LineString, MultiLineString, Polygon, or MultiPolygon Feature or Geometry");
      e2 = n2.coordinates;
    }
    return e2.forEach(function(t3) {
      e2.forEach(function(e3) {
        for (var n3 = 0; n3 < t3.length - 1; n3++) for (var o = n3; o < e3.length - 1; o++) {
          if (t3 === e3) {
            if (1 === Math.abs(n3 - o)) continue;
            if (0 === n3 && o === t3.length - 2 && t3[n3][0] === t3[t3.length - 1][0] && t3[n3][1] === t3[t3.length - 1][1]) continue;
          }
          var s = i(t3[n3][0], t3[n3][1], t3[n3 + 1][0], t3[n3 + 1][1], e3[o][0], e3[o][1], e3[o + 1][0], e3[o + 1][1]);
          s && a.features.push(r.point([s[0], s[1]]));
        }
      });
    }), a;
  };
}, function(t, e, n) {
  "use strict";
  Object.defineProperty(e, "__esModule", { value: true });
  var r = n(8);
  e.getCoord = function(t2) {
    if (!t2) throw new Error("coord is required");
    if (!Array.isArray(t2)) {
      if ("Feature" === t2.type && null !== t2.geometry && "Point" === t2.geometry.type) return t2.geometry.coordinates;
      if ("Point" === t2.type) return t2.coordinates;
    }
    if (Array.isArray(t2) && t2.length >= 2 && !Array.isArray(t2[0]) && !Array.isArray(t2[1])) return t2;
    throw new Error("coord must be GeoJSON Point or an Array of numbers");
  }, e.getCoords = function(t2) {
    if (Array.isArray(t2)) return t2;
    if ("Feature" === t2.type) {
      if (null !== t2.geometry) return t2.geometry.coordinates;
    } else if (t2.coordinates) return t2.coordinates;
    throw new Error("coords must be GeoJSON Feature, Geometry Object or an Array");
  }, e.containsNumber = function i(t2) {
    if (t2.length > 1 && r.isNumber(t2[0]) && r.isNumber(t2[1])) return true;
    if (Array.isArray(t2[0]) && t2[0].length) return i(t2[0]);
    throw new Error("coordinates must only contain numbers");
  }, e.geojsonType = function(t2, e2, n2) {
    if (!e2 || !n2) throw new Error("type and name required");
    if (!t2 || t2.type !== e2) throw new Error("Invalid input to " + n2 + ": must be a " + e2 + ", given " + t2.type);
  }, e.featureOf = function(t2, e2, n2) {
    if (!t2) throw new Error("No feature passed");
    if (!n2) throw new Error(".featureOf() requires a name");
    if (!t2 || "Feature" !== t2.type || !t2.geometry) throw new Error("Invalid input to " + n2 + ", Feature with geometry required");
    if (!t2.geometry || t2.geometry.type !== e2) throw new Error("Invalid input to " + n2 + ": must be a " + e2 + ", given " + t2.geometry.type);
  }, e.collectionOf = function(t2, e2, n2) {
    if (!t2) throw new Error("No featureCollection passed");
    if (!n2) throw new Error(".collectionOf() requires a name");
    if (!t2 || "FeatureCollection" !== t2.type) throw new Error("Invalid input to " + n2 + ", FeatureCollection required");
    for (var r2 = 0, i = t2.features; r2 < i.length; r2++) {
      var a = i[r2];
      if (!a || "Feature" !== a.type || !a.geometry) throw new Error("Invalid input to " + n2 + ", Feature with geometry required");
      if (!a.geometry || a.geometry.type !== e2) throw new Error("Invalid input to " + n2 + ": must be a " + e2 + ", given " + a.geometry.type);
    }
  }, e.getGeom = function(t2) {
    return "Feature" === t2.type ? t2.geometry : t2;
  }, e.getType = function(t2, e2) {
    return "FeatureCollection" === t2.type ? "FeatureCollection" : "GeometryCollection" === t2.type ? "GeometryCollection" : "Feature" === t2.type && null !== t2.geometry ? t2.geometry.type : t2.type;
  };
}, function(t, e, n) {
  !function(t2, n2) {
    n2(e);
  }(0, function(t2) {
    "use strict";
    function e2(t3, e3) {
      return t3 > e3 ? 1 : t3 < e3 ? -1 : 0;
    }
    var n2 = function(t3, n3) {
      void 0 === t3 && (t3 = e2), void 0 === n3 && (n3 = false), this._compare = t3, this._root = null, this._size = 0, this._noDuplicates = !!n3;
    }, r = { size: { configurable: true } };
    n2.prototype.rotateLeft = function(t3) {
      var e3 = t3.right;
      e3 && (t3.right = e3.left, e3.left && (e3.left.parent = t3), e3.parent = t3.parent), t3.parent ? t3 === t3.parent.left ? t3.parent.left = e3 : t3.parent.right = e3 : this._root = e3, e3 && (e3.left = t3), t3.parent = e3;
    }, n2.prototype.rotateRight = function(t3) {
      var e3 = t3.left;
      e3 && (t3.left = e3.right, e3.right && (e3.right.parent = t3), e3.parent = t3.parent), t3.parent ? t3 === t3.parent.left ? t3.parent.left = e3 : t3.parent.right = e3 : this._root = e3, e3 && (e3.right = t3), t3.parent = e3;
    }, n2.prototype._splay = function(t3) {
      for (; t3.parent; ) {
        var e3 = t3.parent;
        e3.parent ? e3.left === t3 && e3.parent.left === e3 ? (this.rotateRight(e3.parent), this.rotateRight(e3)) : e3.right === t3 && e3.parent.right === e3 ? (this.rotateLeft(e3.parent), this.rotateLeft(e3)) : e3.left === t3 && e3.parent.right === e3 ? (this.rotateRight(e3), this.rotateLeft(e3)) : (this.rotateLeft(e3), this.rotateRight(e3)) : e3.left === t3 ? this.rotateRight(e3) : this.rotateLeft(e3);
      }
    }, n2.prototype.splay = function(t3) {
      for (var e3, n3, r2, i2, a2; t3.parent; ) (n3 = (e3 = t3.parent).parent) && n3.parent ? ((r2 = n3.parent).left === n3 ? r2.left = t3 : r2.right = t3, t3.parent = r2) : (t3.parent = null, this._root = t3), i2 = t3.left, a2 = t3.right, t3 === e3.left ? (n3 && (n3.left === e3 ? (e3.right ? (n3.left = e3.right, n3.left.parent = n3) : n3.left = null, e3.right = n3, n3.parent = e3) : (i2 ? (n3.right = i2, i2.parent = n3) : n3.right = null, t3.left = n3, n3.parent = t3)), a2 ? (e3.left = a2, a2.parent = e3) : e3.left = null, t3.right = e3, e3.parent = t3) : (n3 && (n3.right === e3 ? (e3.left ? (n3.right = e3.left, n3.right.parent = n3) : n3.right = null, e3.left = n3, n3.parent = e3) : (a2 ? (n3.left = a2, a2.parent = n3) : n3.left = null, t3.right = n3, n3.parent = t3)), i2 ? (e3.right = i2, i2.parent = e3) : e3.right = null, t3.left = e3, e3.parent = t3);
    }, n2.prototype.replace = function(t3, e3) {
      t3.parent ? t3 === t3.parent.left ? t3.parent.left = e3 : t3.parent.right = e3 : this._root = e3, e3 && (e3.parent = t3.parent);
    }, n2.prototype.minNode = function(t3) {
      if (void 0 === t3 && (t3 = this._root), t3) for (; t3.left; ) t3 = t3.left;
      return t3;
    }, n2.prototype.maxNode = function(t3) {
      if (void 0 === t3 && (t3 = this._root), t3) for (; t3.right; ) t3 = t3.right;
      return t3;
    }, n2.prototype.insert = function(t3, e3) {
      var n3 = this._root, r2 = null, i2 = this._compare;
      if (this._noDuplicates) for (; n3; ) {
        if (r2 = n3, 0 === i2(n3.key, t3)) return;
        n3 = i2(n3.key, t3) < 0 ? n3.right : n3.left;
      }
      else for (; n3; ) r2 = n3, n3 = i2(n3.key, t3) < 0 ? n3.right : n3.left;
      return n3 = { key: t3, data: e3, left: null, right: null, parent: r2 }, r2 ? i2(r2.key, n3.key) < 0 ? r2.right = n3 : r2.left = n3 : this._root = n3, this.splay(n3), this._size++, n3;
    }, n2.prototype.find = function(t3) {
      for (var e3 = this._root, n3 = this._compare; e3; ) {
        var r2 = n3(e3.key, t3);
        if (r2 < 0) e3 = e3.right;
        else {
          if (!(r2 > 0)) return e3;
          e3 = e3.left;
        }
      }
      return null;
    }, n2.prototype.contains = function(t3) {
      for (var e3 = this._root, n3 = this._compare; e3; ) {
        var r2 = n3(t3, e3.key);
        if (0 === r2) return true;
        e3 = r2 < 0 ? e3.left : e3.right;
      }
      return false;
    }, n2.prototype.remove = function(t3) {
      var e3 = this.find(t3);
      if (!e3) return false;
      if (this.splay(e3), e3.left) if (e3.right) {
        var n3 = this.minNode(e3.right);
        n3.parent !== e3 && (this.replace(n3, n3.right), n3.right = e3.right, n3.right.parent = n3), this.replace(e3, n3), n3.left = e3.left, n3.left.parent = n3;
      } else this.replace(e3, e3.left);
      else this.replace(e3, e3.right);
      return this._size--, true;
    }, n2.prototype.removeNode = function(t3) {
      if (!t3) return false;
      if (this.splay(t3), t3.left) if (t3.right) {
        var e3 = this.minNode(t3.right);
        e3.parent !== t3 && (this.replace(e3, e3.right), e3.right = t3.right, e3.right.parent = e3), this.replace(t3, e3), e3.left = t3.left, e3.left.parent = e3;
      } else this.replace(t3, t3.left);
      else this.replace(t3, t3.right);
      return this._size--, true;
    }, n2.prototype.erase = function(t3) {
      var e3 = this.find(t3);
      if (e3) {
        this.splay(e3);
        var n3 = e3.left, r2 = e3.right, i2 = null;
        n3 && (n3.parent = null, i2 = this.maxNode(n3), this.splay(i2), this._root = i2), r2 && (n3 ? i2.right = r2 : this._root = r2, r2.parent = i2), this._size--;
      }
    }, n2.prototype.pop = function() {
      var t3 = this._root, e3 = null;
      if (t3) {
        for (; t3.left; ) t3 = t3.left;
        e3 = { key: t3.key, data: t3.data }, this.remove(t3.key);
      }
      return e3;
    }, n2.prototype.next = function(t3) {
      var e3 = t3;
      if (e3) if (e3.right) for (e3 = e3.right; e3 && e3.left; ) e3 = e3.left;
      else for (e3 = t3.parent; e3 && e3.right === t3; ) t3 = e3, e3 = e3.parent;
      return e3;
    }, n2.prototype.prev = function(t3) {
      var e3 = t3;
      if (e3) if (e3.left) for (e3 = e3.left; e3 && e3.right; ) e3 = e3.right;
      else for (e3 = t3.parent; e3 && e3.left === t3; ) t3 = e3, e3 = e3.parent;
      return e3;
    }, n2.prototype.forEach = function(t3) {
      for (var e3 = this._root, n3 = [], r2 = false, i2 = 0; !r2; ) e3 ? (n3.push(e3), e3 = e3.left) : n3.length > 0 ? (t3(e3 = n3.pop(), i2++), e3 = e3.right) : r2 = true;
      return this;
    }, n2.prototype.range = function(t3, e3, n3, r2) {
      for (var i2 = [], a2 = this._compare, o2 = this._root; 0 !== i2.length || o2; ) if (o2) i2.push(o2), o2 = o2.left;
      else {
        if (a2((o2 = i2.pop()).key, e3) > 0) break;
        if (a2(o2.key, t3) >= 0 && n3.call(r2, o2)) return this;
        o2 = o2.right;
      }
      return this;
    }, n2.prototype.keys = function() {
      for (var t3 = this._root, e3 = [], n3 = [], r2 = false; !r2; ) t3 ? (e3.push(t3), t3 = t3.left) : e3.length > 0 ? (t3 = e3.pop(), n3.push(t3.key), t3 = t3.right) : r2 = true;
      return n3;
    }, n2.prototype.values = function() {
      for (var t3 = this._root, e3 = [], n3 = [], r2 = false; !r2; ) t3 ? (e3.push(t3), t3 = t3.left) : e3.length > 0 ? (t3 = e3.pop(), n3.push(t3.data), t3 = t3.right) : r2 = true;
      return n3;
    }, n2.prototype.at = function(t3) {
      for (var e3 = this._root, n3 = [], r2 = false, i2 = 0; !r2; ) if (e3) n3.push(e3), e3 = e3.left;
      else if (n3.length > 0) {
        if (e3 = n3.pop(), i2 === t3) return e3;
        i2++, e3 = e3.right;
      } else r2 = true;
      return null;
    }, n2.prototype.load = function(t3, e3, n3) {
      if (void 0 === t3 && (t3 = []), void 0 === e3 && (e3 = []), void 0 === n3 && (n3 = false), 0 !== this._size) throw new Error("bulk-load: tree is not empty");
      var r2 = t3.length;
      return n3 && function i2(t4, e4, n4, r3, a2) {
        if (n4 >= r3) return;
        var o2 = t4[n4 + r3 >> 1];
        var s2 = n4 - 1;
        var l2 = r3 + 1;
        for (; ; ) {
          do {
            s2++;
          } while (a2(t4[s2], o2) < 0);
          do {
            l2--;
          } while (a2(t4[l2], o2) > 0);
          if (s2 >= l2) break;
          var u2 = t4[s2];
          t4[s2] = t4[l2], t4[l2] = u2, u2 = e4[s2], e4[s2] = e4[l2], e4[l2] = u2;
        }
        i2(t4, e4, n4, l2, a2);
        i2(t4, e4, l2 + 1, r3, a2);
      }(t3, e3, 0, r2 - 1, this._compare), this._root = function a2(t4, e4, n4, r3, i2) {
        var o2 = i2 - r3;
        if (o2 > 0) {
          var s2 = r3 + Math.floor(o2 / 2), l2 = e4[s2], u2 = n4[s2], c2 = { key: l2, data: u2, parent: t4 };
          return c2.left = a2(c2, e4, n4, r3, s2), c2.right = a2(c2, e4, n4, s2 + 1, i2), c2;
        }
        return null;
      }(null, t3, e3, 0, r2), this._size = r2, this;
    }, n2.prototype.min = function() {
      var t3 = this.minNode(this._root);
      return t3 ? t3.key : null;
    }, n2.prototype.max = function() {
      var t3 = this.maxNode(this._root);
      return t3 ? t3.key : null;
    }, n2.prototype.isEmpty = function() {
      return null === this._root;
    }, r.size.get = function() {
      return this._size;
    }, n2.createTree = function(t3, e3, r2, i2, a2) {
      return new n2(r2, a2).load(t3, e3, i2);
    }, Object.defineProperties(n2.prototype, r);
    var i = 0, a = 1, o = 2, s = 3, l = 0, u = 1, c = 2, h = 3;
    function p(t3, e3, n3) {
      null === e3 ? (t3.inOut = false, t3.otherInOut = true) : (t3.isSubject === e3.isSubject ? (t3.inOut = !e3.inOut, t3.otherInOut = e3.otherInOut) : (t3.inOut = !e3.otherInOut, t3.otherInOut = e3.isVertical() ? !e3.inOut : e3.inOut), e3 && (t3.prevInResult = !f(e3, n3) || e3.isVertical() ? e3.prevInResult : e3)), t3.inResult = f(t3, n3);
    }
    function f(t3, e3) {
      switch (t3.type) {
        case i:
          switch (e3) {
            case l:
              return !t3.otherInOut;
            case u:
              return t3.otherInOut;
            case c:
              return t3.isSubject && t3.otherInOut || !t3.isSubject && !t3.otherInOut;
            case h:
              return true;
          }
          break;
        case o:
          return e3 === l || e3 === u;
        case s:
          return e3 === c;
        case a:
          return false;
      }
      return false;
    }
    var d = function(t3, e3, n3, r2, a2) {
      this.left = e3, this.point = t3, this.otherEvent = n3, this.isSubject = r2, this.type = a2 || i, this.inOut = false, this.otherInOut = false, this.prevInResult = null, this.inResult = false, this.resultInOut = false, this.isExteriorRing = true;
    };
    function g(t3, e3) {
      return t3[0] === e3[0] && t3[1] === e3[1];
    }
    function _(t3, e3, n3) {
      return (t3[0] - n3[0]) * (e3[1] - n3[1]) - (e3[0] - n3[0]) * (t3[1] - n3[1]);
    }
    function m(t3, e3) {
      var n3 = t3.point, r2 = e3.point;
      return n3[0] > r2[0] ? 1 : n3[0] < r2[0] ? -1 : n3[1] !== r2[1] ? n3[1] > r2[1] ? 1 : -1 : function(t4, e4, n4, r3) {
        if (t4.left !== e4.left) return t4.left ? 1 : -1;
        if (0 !== _(n4, t4.otherEvent.point, e4.otherEvent.point)) return t4.isBelow(e4.otherEvent.point) ? -1 : 1;
        return !t4.isSubject && e4.isSubject ? 1 : -1;
      }(t3, e3, n3);
    }
    function y(t3, e3, n3) {
      var r2 = new d(e3, false, t3, t3.isSubject), i2 = new d(e3, true, t3.otherEvent, t3.isSubject);
      return g(t3.point, t3.otherEvent.point) && console.warn("what is that, a collapsed segment?", t3), r2.contourId = i2.contourId = t3.contourId, m(i2, t3.otherEvent) > 0 && (t3.otherEvent.left = true, i2.left = false), t3.otherEvent.otherEvent = i2, t3.otherEvent = r2, n3.push(i2), n3.push(r2), n3;
    }
    function v(t3, e3) {
      return t3[0] * e3[1] - t3[1] * e3[0];
    }
    function b(t3, e3) {
      return t3[0] * e3[0] + t3[1] * e3[1];
    }
    function L2(t3, e3, n3) {
      var r2 = function(t4, e4, n4, r3, i3) {
        var a2 = [e4[0] - t4[0], e4[1] - t4[1]], o2 = [r3[0] - n4[0], r3[1] - n4[1]];
        function s2(t5, e5, n5) {
          return [t5[0] + e5 * n5[0], t5[1] + e5 * n5[1]];
        }
        var l3 = [n4[0] - t4[0], n4[1] - t4[1]], u3 = v(a2, o2), c3 = u3 * u3, h2 = b(a2, a2);
        if (c3 > 0) {
          var p2 = v(l3, o2) / u3;
          if (p2 < 0 || p2 > 1) return null;
          var f2 = v(l3, a2) / u3;
          return f2 < 0 || f2 > 1 ? null : 0 === p2 || 1 === p2 ? i3 ? null : [s2(t4, p2, a2)] : 0 === f2 || 1 === f2 ? i3 ? null : [s2(n4, f2, o2)] : [s2(t4, p2, a2)];
        }
        if ((c3 = (u3 = v(l3, a2)) * u3) > 0) return null;
        var d2 = b(a2, l3) / h2, g2 = d2 + b(a2, o2) / h2, _2 = Math.min(d2, g2), m2 = Math.max(d2, g2);
        return _2 <= 1 && m2 >= 0 ? 1 === _2 ? i3 ? null : [s2(t4, _2 > 0 ? _2 : 0, a2)] : 0 === m2 ? i3 ? null : [s2(t4, m2 < 1 ? m2 : 1, a2)] : i3 && 0 === _2 && 1 === m2 ? null : [s2(t4, _2 > 0 ? _2 : 0, a2), s2(t4, m2 < 1 ? m2 : 1, a2)] : null;
      }(t3.point, t3.otherEvent.point, e3.point, e3.otherEvent.point), i2 = r2 ? r2.length : 0;
      if (0 === i2) return 0;
      if (1 === i2 && (g(t3.point, e3.point) || g(t3.otherEvent.point, e3.otherEvent.point))) return 0;
      if (2 === i2 && t3.isSubject === e3.isSubject) return 0;
      if (1 === i2) return g(t3.point, r2[0]) || g(t3.otherEvent.point, r2[0]) || y(t3, r2[0], n3), g(e3.point, r2[0]) || g(e3.otherEvent.point, r2[0]) || y(e3, r2[0], n3), 1;
      var l2 = [], u2 = false, c2 = false;
      return g(t3.point, e3.point) ? u2 = true : 1 === m(t3, e3) ? l2.push(e3, t3) : l2.push(t3, e3), g(t3.otherEvent.point, e3.otherEvent.point) ? c2 = true : 1 === m(t3.otherEvent, e3.otherEvent) ? l2.push(e3.otherEvent, t3.otherEvent) : l2.push(t3.otherEvent, e3.otherEvent), u2 && c2 || u2 ? (e3.type = a, t3.type = e3.inOut === t3.inOut ? o : s, u2 && !c2 && y(l2[1].otherEvent, l2[0].point, n3), 2) : c2 ? (y(l2[0], l2[1].point, n3), 3) : l2[0] !== l2[3].otherEvent ? (y(l2[0], l2[1].point, n3), y(l2[1], l2[2].point, n3), 3) : (y(l2[0], l2[1].point, n3), y(l2[3].otherEvent, l2[2].point, n3), 3);
    }
    function k(t3, e3) {
      if (t3 === e3) return 0;
      if (0 !== _(t3.point, t3.otherEvent.point, e3.point) || 0 !== _(t3.point, t3.otherEvent.point, e3.otherEvent.point)) return g(t3.point, e3.point) ? t3.isBelow(e3.otherEvent.point) ? -1 : 1 : t3.point[0] === e3.point[0] ? t3.point[1] < e3.point[1] ? -1 : 1 : 1 === m(t3, e3) ? e3.isAbove(t3.point) ? -1 : 1 : t3.isBelow(e3.point) ? -1 : 1;
      if (t3.isSubject !== e3.isSubject) return t3.isSubject ? -1 : 1;
      var n3 = t3.point, r2 = e3.point;
      return n3[0] === r2[0] && n3[1] === r2[1] ? (n3 = t3.otherEvent.point, r2 = e3.otherEvent.point, n3[0] === r2[0] && n3[1] === r2[1] ? 0 : t3.contourId > e3.contourId ? 1 : -1) : 1 === m(t3, e3) ? 1 : -1;
    }
    function M(t3, e3, n3, r2) {
      var i2 = t3 + 1, a2 = e3.length;
      if (i2 > a2 - 1) return t3 - 1;
      for (var o2 = e3[t3].point, s2 = e3[i2].point; i2 < a2 && s2[0] === o2[0] && s2[1] === o2[1]; ) {
        if (!n3[i2]) return i2;
        s2 = e3[++i2].point;
      }
      for (i2 = t3 - 1; n3[i2] && i2 >= r2; ) i2--;
      return i2;
    }
    function w(t3, e3) {
      var n3, r2, i2, a2 = function(t4) {
        var e4, n4, r3, i3, a3 = [];
        for (n4 = 0, r3 = t4.length; n4 < r3; n4++) ((e4 = t4[n4]).left && e4.inResult || !e4.left && e4.otherEvent.inResult) && a3.push(e4);
        for (var o3 = false; !o3; ) for (o3 = true, n4 = 0, r3 = a3.length; n4 < r3; n4++) n4 + 1 < r3 && 1 === m(a3[n4], a3[n4 + 1]) && (i3 = a3[n4], a3[n4] = a3[n4 + 1], a3[n4 + 1] = i3, o3 = false);
        for (n4 = 0, r3 = a3.length; n4 < r3; n4++) (e4 = a3[n4]).pos = n4;
        for (n4 = 0, r3 = a3.length; n4 < r3; n4++) (e4 = a3[n4]).left || (i3 = e4.pos, e4.pos = e4.otherEvent.pos, e4.otherEvent.pos = i3);
        return a3;
      }(t3), o2 = {}, s2 = [];
      for (n3 = 0, r2 = a2.length; n3 < r2; n3++) if (!o2[n3]) {
        var l2 = [[]];
        a2[n3].isExteriorRing ? e3 === c && !a2[n3].isSubject && s2.length > 1 ? s2[s2.length - 1].push(l2[0]) : s2.push(l2) : e3 !== c || a2[n3].isSubject || 0 !== s2.length ? 0 === s2.length ? s2.push([[l2]]) : s2[s2.length - 1].push(l2[0]) : s2.push(l2);
        var u2 = s2.length - 1, h2 = n3, p2 = a2[n3].point;
        for (l2[0].push(p2); h2 >= n3; ) i2 = a2[h2], o2[h2] = true, i2.left ? (i2.resultInOut = false, i2.contourId = u2) : (i2.otherEvent.resultInOut = true, i2.otherEvent.contourId = u2), o2[h2 = i2.pos] = true, l2[0].push(a2[h2].point), h2 = M(h2, a2, o2, n3);
        i2 = a2[h2 = -1 === h2 ? n3 : h2], o2[h2] = o2[i2.pos] = true, i2.otherEvent.resultInOut = true, i2.otherEvent.contourId = u2;
      }
      return s2;
    }
    d.prototype.isBelow = function(t3) {
      var e3 = this.point, n3 = this.otherEvent.point;
      return this.left ? (e3[0] - t3[0]) * (n3[1] - t3[1]) - (n3[0] - t3[0]) * (e3[1] - t3[1]) > 0 : (n3[0] - t3[0]) * (e3[1] - t3[1]) - (e3[0] - t3[0]) * (n3[1] - t3[1]) > 0;
    }, d.prototype.isAbove = function(t3) {
      return !this.isBelow(t3);
    }, d.prototype.isVertical = function() {
      return this.point[0] === this.otherEvent.point[0];
    }, d.prototype.clone = function() {
      var t3 = new d(this.point, this.left, this.otherEvent, this.isSubject, this.type);
      return t3.inResult = this.inResult, t3.prevInResult = this.prevInResult, t3.isExteriorRing = this.isExteriorRing, t3.inOut = this.inOut, t3.otherInOut = this.otherInOut, t3;
    };
    var C = E, x = E;
    function E(t3, e3) {
      if (!(this instanceof E)) return new E(t3, e3);
      if (this.data = t3 || [], this.length = this.data.length, this.compare = e3 || S, this.length > 0) for (var n3 = (this.length >> 1) - 1; n3 >= 0; n3--) this._down(n3);
    }
    function S(t3, e3) {
      return t3 < e3 ? -1 : t3 > e3 ? 1 : 0;
    }
    E.prototype = { push: function(t3) {
      this.data.push(t3), this.length++, this._up(this.length - 1);
    }, pop: function() {
      if (0 === this.length) return void 0;
      var t3 = this.data[0];
      return this.length--, this.length > 0 && (this.data[0] = this.data[this.length], this._down(0)), this.data.pop(), t3;
    }, peek: function() {
      return this.data[0];
    }, _up: function(t3) {
      for (var e3 = this.data, n3 = this.compare, r2 = e3[t3]; t3 > 0; ) {
        var i2 = t3 - 1 >> 1, a2 = e3[i2];
        if (n3(r2, a2) >= 0) break;
        e3[t3] = a2, t3 = i2;
      }
      e3[t3] = r2;
    }, _down: function(t3) {
      for (var e3 = this.data, n3 = this.compare, r2 = this.length >> 1, i2 = e3[t3]; t3 < r2; ) {
        var a2 = 1 + (t3 << 1), o2 = a2 + 1, s2 = e3[a2];
        if (o2 < this.length && n3(e3[o2], s2) < 0 && (a2 = o2, s2 = e3[o2]), n3(s2, i2) >= 0) break;
        e3[t3] = s2, t3 = a2;
      }
      e3[t3] = i2;
    } }, C["default"] = x;
    var P = Math.max, O = Math.min, B = 0;
    function j(t3, e3, n3, r2, i2, a2) {
      var o2, s2, l2, u2, c2, h2;
      for (o2 = 0, s2 = t3.length - 1; o2 < s2; o2++) if (l2 = t3[o2], u2 = t3[o2 + 1], c2 = new d(l2, false, void 0, e3), h2 = new d(u2, false, c2, e3), c2.otherEvent = h2, l2[0] !== u2[0] || l2[1] !== u2[1]) {
        c2.contourId = h2.contourId = n3, a2 || (c2.isExteriorRing = false, h2.isExteriorRing = false), m(c2, h2) > 0 ? h2.left = true : c2.left = true;
        var p2 = l2[0], f2 = l2[1];
        i2[0] = O(i2[0], p2), i2[1] = O(i2[1], f2), i2[2] = P(i2[2], p2), i2[3] = P(i2[3], f2), r2.push(c2), r2.push(h2);
      }
    }
    var D = [];
    function T(t3, e3, r2) {
      "number" == typeof t3[0][0][0] && (t3 = [t3]), "number" == typeof e3[0][0][0] && (e3 = [e3]);
      var i2 = function(t4, e4, n3) {
        var r3 = null;
        return t4.length * e4.length == 0 && (n3 === l ? r3 = D : n3 === c ? r3 = t4 : n3 !== u && n3 !== h || (r3 = 0 === t4.length ? e4 : t4)), r3;
      }(t3, e3, r2);
      if (i2) return i2 === D ? null : i2;
      var a2 = [Infinity, Infinity, -Infinity, -Infinity], o2 = [Infinity, Infinity, -Infinity, -Infinity], s2 = function(t4, e4, n3, r3, i3) {
        var a3, o3, s3, l2, u2, h2, p2 = new C(null, m);
        for (s3 = 0, l2 = t4.length; s3 < l2; s3++) for (u2 = 0, h2 = (a3 = t4[s3]).length; u2 < h2; u2++) (o3 = 0 === u2) && B++, j(a3[u2], true, B, p2, n3, o3);
        for (s3 = 0, l2 = e4.length; s3 < l2; s3++) for (u2 = 0, h2 = (a3 = e4[s3]).length; u2 < h2; u2++) o3 = 0 === u2, i3 === c && (o3 = false), o3 && B++, j(a3[u2], false, B, p2, r3, o3);
        return p2;
      }(t3, e3, a2, o2, r2);
      return (i2 = function(t4, e4, n3, r3, i3) {
        var a3 = null;
        return (n3[0] > r3[2] || r3[0] > n3[2] || n3[1] > r3[3] || r3[1] > n3[3]) && (i3 === l ? a3 = D : i3 === c ? a3 = t4 : i3 !== u && i3 !== h || (a3 = t4.concat(e4))), a3;
      }(t3, e3, a2, o2, r2)) ? i2 === D ? null : i2 : w(function(t4, e4, r3, i3, a3, o3) {
        for (var s3, u2, h2, f2 = new n2(k), d2 = [], g2 = Math.min(i3[2], a3[2]); 0 !== t4.length; ) {
          var _2 = t4.pop();
          if (d2.push(_2), o3 === l && _2.point[0] > g2 || o3 === c && _2.point[0] > i3[2]) break;
          if (_2.left) {
            u2 = s3 = f2.insert(_2), s3 = s3 !== (h2 = f2.minNode()) ? f2.prev(s3) : null, u2 = f2.next(u2);
            var m2 = s3 ? s3.key : null;
            if (p(_2, m2, o3), u2 && 2 === L2(_2, u2.key, t4) && (p(_2, m2, o3), p(_2, u2.key, o3)), s3 && 2 === L2(s3.key, _2, t4)) {
              var y2 = s3;
              p(m2, (y2 = y2 !== h2 ? f2.prev(y2) : null) ? y2.key : null, o3), p(_2, m2, o3);
            }
          } else _2 = _2.otherEvent, u2 = s3 = f2.find(_2), s3 && u2 && (s3 = s3 !== h2 ? f2.prev(s3) : null, u2 = f2.next(u2), f2.remove(_2), u2 && s3 && L2(s3.key, u2.key, t4));
        }
        return d2;
      }(s2, 0, 0, a2, o2, r2), r2);
    }
    var I = { UNION: u, DIFFERENCE: c, INTERSECTION: l, XOR: h };
    t2.union = function(t3, e3) {
      return T(t3, e3, u);
    }, t2.diff = function(t3, e3) {
      return T(t3, e3, c);
    }, t2.xor = function(t3, e3) {
      return T(t3, e3, h);
    }, t2.intersection = function(t3, e3) {
      return T(t3, e3, l);
    }, t2.operations = I, Object.defineProperty(t2, "__esModule", { value: true });
  });
}, function(t, e, n) {
  "use strict";
  Object.defineProperty(e, "__esModule", { value: true });
  var r = n(8);
  function i(t2, e2, n2) {
    if (null !== t2) for (var r2, a2, o2, s2, l2, u2, c2, h, p = 0, f = 0, d = t2.type, g = "FeatureCollection" === d, _ = "Feature" === d, m = g ? t2.features.length : 1, y = 0; y < m; y++) {
      l2 = (h = !!(c2 = g ? t2.features[y].geometry : _ ? t2.geometry : t2) && "GeometryCollection" === c2.type) ? c2.geometries.length : 1;
      for (var v = 0; v < l2; v++) {
        var b = 0, L2 = 0;
        if (null !== (s2 = h ? c2.geometries[v] : c2)) {
          u2 = s2.coordinates;
          var k = s2.type;
          switch (p = !n2 || "Polygon" !== k && "MultiPolygon" !== k ? 0 : 1, k) {
            case null:
              break;
            case "Point":
              if (false === e2(u2, f, y, b, L2)) return false;
              f++, b++;
              break;
            case "LineString":
            case "MultiPoint":
              for (r2 = 0; r2 < u2.length; r2++) {
                if (false === e2(u2[r2], f, y, b, L2)) return false;
                f++, "MultiPoint" === k && b++;
              }
              "LineString" === k && b++;
              break;
            case "Polygon":
            case "MultiLineString":
              for (r2 = 0; r2 < u2.length; r2++) {
                for (a2 = 0; a2 < u2[r2].length - p; a2++) {
                  if (false === e2(u2[r2][a2], f, y, b, L2)) return false;
                  f++;
                }
                "MultiLineString" === k && b++, "Polygon" === k && L2++;
              }
              "Polygon" === k && b++;
              break;
            case "MultiPolygon":
              for (r2 = 0; r2 < u2.length; r2++) {
                for (L2 = 0, a2 = 0; a2 < u2[r2].length; a2++) {
                  for (o2 = 0; o2 < u2[r2][a2].length - p; o2++) {
                    if (false === e2(u2[r2][a2][o2], f, y, b, L2)) return false;
                    f++;
                  }
                  L2++;
                }
                b++;
              }
              break;
            case "GeometryCollection":
              for (r2 = 0; r2 < s2.geometries.length; r2++) if (false === i(s2.geometries[r2], e2, n2)) return false;
              break;
            default:
              throw new Error("Unknown Geometry Type");
          }
        }
      }
    }
  }
  function a(t2, e2) {
    var n2;
    switch (t2.type) {
      case "FeatureCollection":
        for (n2 = 0; n2 < t2.features.length && false !== e2(t2.features[n2].properties, n2); n2++) ;
        break;
      case "Feature":
        e2(t2.properties, 0);
    }
  }
  function o(t2, e2) {
    if ("Feature" === t2.type) e2(t2, 0);
    else if ("FeatureCollection" === t2.type) for (var n2 = 0; n2 < t2.features.length && false !== e2(t2.features[n2], n2); n2++) ;
  }
  function s(t2, e2) {
    var n2, r2, i2, a2, o2, s2, l2, u2, c2, h, p = 0, f = "FeatureCollection" === t2.type, d = "Feature" === t2.type, g = f ? t2.features.length : 1;
    for (n2 = 0; n2 < g; n2++) {
      for (s2 = f ? t2.features[n2].geometry : d ? t2.geometry : t2, u2 = f ? t2.features[n2].properties : d ? t2.properties : {}, c2 = f ? t2.features[n2].bbox : d ? t2.bbox : void 0, h = f ? t2.features[n2].id : d ? t2.id : void 0, o2 = (l2 = !!s2 && "GeometryCollection" === s2.type) ? s2.geometries.length : 1, i2 = 0; i2 < o2; i2++) if (null !== (a2 = l2 ? s2.geometries[i2] : s2)) switch (a2.type) {
        case "Point":
        case "LineString":
        case "MultiPoint":
        case "Polygon":
        case "MultiLineString":
        case "MultiPolygon":
          if (false === e2(a2, p, u2, c2, h)) return false;
          break;
        case "GeometryCollection":
          for (r2 = 0; r2 < a2.geometries.length; r2++) if (false === e2(a2.geometries[r2], p, u2, c2, h)) return false;
          break;
        default:
          throw new Error("Unknown Geometry Type");
      }
      else if (false === e2(null, p, u2, c2, h)) return false;
      p++;
    }
  }
  function l(t2, e2) {
    s(t2, function(t3, n2, i2, a2, o2) {
      var s2, l2 = null === t3 ? null : t3.type;
      switch (l2) {
        case null:
        case "Point":
        case "LineString":
        case "Polygon":
          return false !== e2(r.feature(t3, i2, { bbox: a2, id: o2 }), n2, 0) && void 0;
      }
      switch (l2) {
        case "MultiPoint":
          s2 = "Point";
          break;
        case "MultiLineString":
          s2 = "LineString";
          break;
        case "MultiPolygon":
          s2 = "Polygon";
      }
      for (var u2 = 0; u2 < t3.coordinates.length; u2++) {
        var c2 = { type: s2, coordinates: t3.coordinates[u2] };
        if (false === e2(r.feature(c2, i2), n2, u2)) return false;
      }
    });
  }
  function u(t2, e2) {
    l(t2, function(t3, n2, a2) {
      var o2 = 0;
      if (t3.geometry) {
        var s2 = t3.geometry.type;
        if ("Point" !== s2 && "MultiPoint" !== s2) {
          var l2, u2 = 0, c2 = 0, h = 0;
          return false !== i(t3, function(i2, s3, p, f, d) {
            if (l2 === void 0 || n2 > u2 || f > c2 || d > h) return l2 = i2, u2 = n2, c2 = f, h = d, void (o2 = 0);
            var g = r.lineString([l2, i2], t3.properties);
            if (false === e2(g, n2, a2, d, o2)) return false;
            o2++, l2 = i2;
          }) && void 0;
        }
      }
    });
  }
  function c(t2, e2) {
    if (!t2) throw new Error("geojson is required");
    l(t2, function(t3, n2, i2) {
      if (null !== t3.geometry) {
        var a2 = t3.geometry.type, o2 = t3.geometry.coordinates;
        switch (a2) {
          case "LineString":
            if (false === e2(t3, n2, i2, 0, 0)) return false;
            break;
          case "Polygon":
            for (var s2 = 0; s2 < o2.length; s2++) if (false === e2(r.lineString(o2[s2], t3.properties), n2, i2, s2)) return false;
        }
      }
    });
  }
  e.coordEach = i, e.coordReduce = function(t2, e2, n2, r2) {
    var a2 = n2;
    return i(t2, function(t3, r3, i2, o2, s2) {
      a2 = 0 === r3 && n2 === void 0 ? t3 : e2(a2, t3, r3, i2, o2, s2);
    }, r2), a2;
  }, e.propEach = a, e.propReduce = function(t2, e2, n2) {
    var r2 = n2;
    return a(t2, function(t3, i2) {
      r2 = 0 === i2 && n2 === void 0 ? t3 : e2(r2, t3, i2);
    }), r2;
  }, e.featureEach = o, e.featureReduce = function(t2, e2, n2) {
    var r2 = n2;
    return o(t2, function(t3, i2) {
      r2 = 0 === i2 && n2 === void 0 ? t3 : e2(r2, t3, i2);
    }), r2;
  }, e.coordAll = function(t2) {
    var e2 = [];
    return i(t2, function(t3) {
      e2.push(t3);
    }), e2;
  }, e.geomEach = s, e.geomReduce = function(t2, e2, n2) {
    var r2 = n2;
    return s(t2, function(t3, i2, a2, o2, s2) {
      r2 = 0 === i2 && n2 === void 0 ? t3 : e2(r2, t3, i2, a2, o2, s2);
    }), r2;
  }, e.flattenEach = l, e.flattenReduce = function(t2, e2, n2) {
    var r2 = n2;
    return l(t2, function(t3, i2, a2) {
      r2 = 0 === i2 && 0 === a2 && n2 === void 0 ? t3 : e2(r2, t3, i2, a2);
    }), r2;
  }, e.segmentEach = u, e.segmentReduce = function(t2, e2, n2) {
    var r2 = n2, i2 = false;
    return u(t2, function(t3, a2, o2, s2, l2) {
      r2 = false === i2 && n2 === void 0 ? t3 : e2(r2, t3, a2, o2, s2, l2), i2 = true;
    }), r2;
  }, e.lineEach = c, e.lineReduce = function(t2, e2, n2) {
    var r2 = n2;
    return c(t2, function(t3, i2, a2, o2) {
      r2 = 0 === i2 && n2 === void 0 ? t3 : e2(r2, t3, i2, a2, o2);
    }), r2;
  }, e.findSegment = function(t2, e2) {
    if (e2 = e2 || {}, !r.isObject(e2)) throw new Error("options is invalid");
    var n2, i2 = e2.featureIndex || 0, a2 = e2.multiFeatureIndex || 0, o2 = e2.geometryIndex || 0, s2 = e2.segmentIndex || 0, l2 = e2.properties;
    switch (t2.type) {
      case "FeatureCollection":
        i2 < 0 && (i2 = t2.features.length + i2), l2 = l2 || t2.features[i2].properties, n2 = t2.features[i2].geometry;
        break;
      case "Feature":
        l2 = l2 || t2.properties, n2 = t2.geometry;
        break;
      case "Point":
      case "MultiPoint":
        return null;
      case "LineString":
      case "Polygon":
      case "MultiLineString":
      case "MultiPolygon":
        n2 = t2;
        break;
      default:
        throw new Error("geojson is invalid");
    }
    if (null === n2) return null;
    var u2 = n2.coordinates;
    switch (n2.type) {
      case "Point":
      case "MultiPoint":
        return null;
      case "LineString":
        return s2 < 0 && (s2 = u2.length + s2 - 1), r.lineString([u2[s2], u2[s2 + 1]], l2, e2);
      case "Polygon":
        return o2 < 0 && (o2 = u2.length + o2), s2 < 0 && (s2 = u2[o2].length + s2 - 1), r.lineString([u2[o2][s2], u2[o2][s2 + 1]], l2, e2);
      case "MultiLineString":
        return a2 < 0 && (a2 = u2.length + a2), s2 < 0 && (s2 = u2[a2].length + s2 - 1), r.lineString([u2[a2][s2], u2[a2][s2 + 1]], l2, e2);
      case "MultiPolygon":
        return a2 < 0 && (a2 = u2.length + a2), o2 < 0 && (o2 = u2[a2].length + o2), s2 < 0 && (s2 = u2[a2][o2].length - s2 - 1), r.lineString([u2[a2][o2][s2], u2[a2][o2][s2 + 1]], l2, e2);
    }
    throw new Error("geojson is invalid");
  }, e.findPoint = function(t2, e2) {
    if (e2 = e2 || {}, !r.isObject(e2)) throw new Error("options is invalid");
    var n2, i2 = e2.featureIndex || 0, a2 = e2.multiFeatureIndex || 0, o2 = e2.geometryIndex || 0, s2 = e2.coordIndex || 0, l2 = e2.properties;
    switch (t2.type) {
      case "FeatureCollection":
        i2 < 0 && (i2 = t2.features.length + i2), l2 = l2 || t2.features[i2].properties, n2 = t2.features[i2].geometry;
        break;
      case "Feature":
        l2 = l2 || t2.properties, n2 = t2.geometry;
        break;
      case "Point":
      case "MultiPoint":
        return null;
      case "LineString":
      case "Polygon":
      case "MultiLineString":
      case "MultiPolygon":
        n2 = t2;
        break;
      default:
        throw new Error("geojson is invalid");
    }
    if (null === n2) return null;
    var u2 = n2.coordinates;
    switch (n2.type) {
      case "Point":
        return r.point(u2, l2, e2);
      case "MultiPoint":
        return a2 < 0 && (a2 = u2.length + a2), r.point(u2[a2], l2, e2);
      case "LineString":
        return s2 < 0 && (s2 = u2.length + s2), r.point(u2[s2], l2, e2);
      case "Polygon":
        return o2 < 0 && (o2 = u2.length + o2), s2 < 0 && (s2 = u2[o2].length + s2), r.point(u2[o2][s2], l2, e2);
      case "MultiLineString":
        return a2 < 0 && (a2 = u2.length + a2), s2 < 0 && (s2 = u2[a2].length + s2), r.point(u2[a2][s2], l2, e2);
      case "MultiPolygon":
        return a2 < 0 && (a2 = u2.length + a2), o2 < 0 && (o2 = u2[a2].length + o2), s2 < 0 && (s2 = u2[a2][o2].length - s2), r.point(u2[a2][o2][s2], l2, e2);
    }
    throw new Error("geojson is invalid");
  };
}, function(t, e, n) {
  t.exports = n(47);
}, function(t, e, n) {
  "use strict";
  Object.defineProperty(e, "__esModule", { value: true });
  var r = n(48), i = (n.n(r), n(49)), a = (n.n(i), n(50)), o = n(128), s = n(1), l = (n(141), n(142), n(143), n(144), n(145), n(146), n(147), n(2)), u = (n(152), n(153), n(154), n(155), n(156), n(157), n(158), n(159)), c = (n.n(u), n(160));
  n.n(c);
  L.PM = L.PM || { version: i.version, Map: a.a, Toolbar: o.a, Draw: s.a, Edit: l.a, activeLang: "en", initialize: function() {
    this.addInitHooks();
  }, addInitHooks: function() {
    L.Map.addInitHook(function() {
      this.options.pmIgnore || (this.pm = new L.PM.Map(this));
    }), L.LayerGroup.addInitHook(function() {
      this.pm = new L.PM.Edit.LayerGroup(this);
    }), L.Marker.addInitHook(function() {
      this.options.pmIgnore || (this.pm = new L.PM.Edit.Marker(this));
    }), L.CircleMarker.addInitHook(function() {
      this.options.pmIgnore || (this.pm = new L.PM.Edit.CircleMarker(this));
    }), L.Polyline.addInitHook(function() {
      this.options.pmIgnore || (this.pm = new L.PM.Edit.Line(this));
    }), L.Polygon.addInitHook(function() {
      this.options.pmIgnore || (this.pm = new L.PM.Edit.Polygon(this));
    }), L.Rectangle.addInitHook(function() {
      this.options.pmIgnore || (this.pm = new L.PM.Edit.Rectangle(this));
    }), L.Circle.addInitHook(function() {
      this.options.pmIgnore || (this.pm = new L.PM.Edit.Circle(this));
    });
  } }, L.PM.initialize();
}, function(t, e) {
  Array.prototype.findIndex = Array.prototype.findIndex || function(t2) {
    if (null === this) throw new TypeError("Array.prototype.findIndex called on null or undefined");
    if ("function" != typeof t2) throw new TypeError("callback must be a function");
    for (var e2 = Object(this), n = e2.length >>> 0, r = arguments[1], i = 0; i < n; i++) if (t2.call(r, e2[i], i, e2)) return i;
    return -1;
  }, Array.prototype.find = Array.prototype.find || function(t2) {
    if (null === this) throw new TypeError("Array.prototype.find called on null or undefined");
    if ("function" != typeof t2) throw new TypeError("callback must be a function");
    for (var e2 = Object(this), n = e2.length >>> 0, r = arguments[1], i = 0; i < n; i++) {
      var a = e2[i];
      if (t2.call(r, a, i, e2)) return a;
    }
  }, "function" != typeof Object.assign && (Object.assign = function(t2) {
    "use strict";
    if (null == t2) throw new TypeError("Cannot convert undefined or null to object");
    t2 = Object(t2);
    for (var e2 = 1; e2 < arguments.length; e2++) {
      var n = arguments[e2];
      if (null != n) for (var r in n) Object.prototype.hasOwnProperty.call(n, r) && (t2[r] = n[r]);
    }
    return t2;
  }), [Element.prototype, CharacterData.prototype, DocumentType.prototype].forEach(function(t2) {
    t2.hasOwnProperty("remove") || Object.defineProperty(t2, "remove", { configurable: true, enumerable: true, writable: true, value: function() {
      this.parentNode.removeChild(this);
    } });
  });
}, function(t, e) {
  t.exports = { name: "leaflet.pm", version: "2.2.0", description: "A Leaflet Plugin For Editing Geometry Layers in Leaflet 1.0", keywords: ["leaflet", "polygon management", "geometry editing", "map data", "map overlay", "polygon", "geojson", "leaflet-draw", "data-field-geojson", "ui-leaflet-draw"], files: ["dist"], main: "dist/leaflet.pm.min.js", dependencies: { "@turf/difference": "^6.0.2", "@turf/intersect": "^6.1.3", "@turf/kinks": "6.x", lodash: "^4.17.15" }, devDependencies: { "@babel/core": "^7.5.5", "@babel/preset-env": "^7.5.5", "babel-loader": "^8.0.6", "css-loader": "^2.1.1", cypress: "^3.4.1", eslint: "^4.19.1", "eslint-config-airbnb-base": "^12.1.0", "eslint-config-prettier": "^3.6.0", "eslint-plugin-cypress": "^2.6.1", "eslint-plugin-import": "^2.18.2", "extract-text-webpack-plugin": "^3.0.2", "file-loader": "^0.11.1", leaflet: "^1.5.1", prettier: "1.16.1", "style-loader": "^0.19.0", "uglifyjs-webpack-plugin": "^1.3.0", "url-loader": "^0.6.2", webpack: "^3.12.0" }, peerDependencies: { leaflet: "^1.2.0" }, scripts: { start: "npm run dev", dev: "./node_modules/.bin/webpack --config=webpack.dev.js", test: "$(npm bin)/cypress run", cypress: "$(npm bin)/cypress open", build: "./node_modules/.bin/webpack --config=webpack.build.js", prepare: "npm run build", "eslint-check": "eslint --print-config . | eslint-config-prettier-check", eslint: "eslint src/ --fix", prettier: "prettier --write '{src,cypress}/**/*.{js,css}'", lint: "npm run eslint && npm run prettier" }, repository: { type: "git", url: "git://github.com/codeofsumit/leaflet.pm.git" }, author: { name: "Sumit Kumar", email: "sk@outlook.com", url: "http://twitter.com/TweetsOfSumit" }, license: "MIT", bugs: { url: "https://github.com/codeofsumit/leaflet.pm/issues" }, homepage: "https://leafletpm.now.sh", prettier: { trailingComma: "es5", tabWidth: 2, semi: true, singleQuote: true } };
}, function(t, e, n) {
  "use strict";
  var r = n(51), i = n.n(r), a = n(36), o = L.Class.extend({ initialize: function(t2) {
    this.map = t2, this.Draw = new L.PM.Draw(t2), this.Toolbar = new L.PM.Toolbar(t2), this._globalRemovalMode = false;
  }, setLang: function() {
    var t2 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "en", e2 = arguments.length > 1 ? arguments[1] : void 0, n2 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : "en";
    e2 && (a.a[t2] = i()(a.a[n2], e2)), L.PM.activeLang = t2, this.map.pm.Toolbar.reinit();
  }, addControls: function(t2) {
    this.Toolbar.addControls(t2);
  }, removeControls: function() {
    this.Toolbar.removeControls();
  }, toggleControls: function() {
    this.Toolbar.toggleControls();
  }, controlsVisible: function() {
    return this.Toolbar.isVisible;
  }, enableDraw: function() {
    var t2 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "Polygon", e2 = arguments.length > 1 ? arguments[1] : void 0;
    "Poly" === t2 && (t2 = "Polygon"), this.Draw.enable(t2, e2);
  }, disableDraw: function() {
    var t2 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "Polygon";
    "Poly" === t2 && (t2 = "Polygon"), this.Draw.disable(t2);
  }, setPathOptions: function(t2) {
    this.Draw.setPathOptions(t2);
  }, findLayers: function() {
    var t2 = [];
    return this.map.eachLayer(function(e2) {
      (e2 instanceof L.Polyline || e2 instanceof L.Marker || e2 instanceof L.Circle || e2 instanceof L.CircleMarker) && t2.push(e2);
    }), t2 = (t2 = t2.filter(function(t3) {
      return !!t3.pm;
    })).filter(function(t3) {
      return !t3._pmTempLayer;
    });
  }, removeLayer: function(t2) {
    var e2 = t2.target;
    !(e2._pmTempLayer || e2.pm && e2.pm.dragging()) && (e2.remove(), this.map.fire("pm:remove", { layer: e2 }));
  }, globalDragModeEnabled: function() {
    return !!this._globalDragMode;
  }, enableGlobalDragMode: function() {
    var t2 = this.findLayers();
    this._globalDragMode = true, t2.forEach(function(t3) {
      t3.pm.enableLayerDrag();
    }), this.map.on("layeradd", this.layerAddHandler, this), this.Toolbar.toggleButton("dragMode", this._globalDragMode), this._fireDragModeEvent(true);
  }, disableGlobalDragMode: function() {
    var t2 = this.findLayers();
    this._globalDragMode = false, t2.forEach(function(t3) {
      t3.pm.disableLayerDrag();
    }), this.map.off("layeradd", this.layerAddHandler, this), this.Toolbar.toggleButton("dragMode", this._globalDragMode), this._fireDragModeEvent(false);
  }, _fireDragModeEvent: function(t2) {
    this.map.fire("pm:globaldragmodetoggled", { enabled: t2, map: this.map });
  }, toggleGlobalDragMode: function() {
    this.globalDragModeEnabled() ? this.disableGlobalDragMode() : this.enableGlobalDragMode();
  }, layerAddHandler: function(t2) {
    var e2 = t2.layer;
    !!e2.pm && !e2._pmTempLayer && (this.globalRemovalEnabled() && (this.disableGlobalRemovalMode(), this.enableGlobalRemovalMode()), this.globalEditEnabled() && (this.disableGlobalEditMode(), this.enableGlobalEditMode()), this.globalDragModeEnabled() && (this.disableGlobalDragMode(), this.enableGlobalDragMode()));
  }, disableGlobalRemovalMode: function() {
    var t2 = this;
    this._globalRemovalMode = false, this.map.eachLayer(function(e2) {
      e2.off("click", t2.removeLayer, t2);
    }), this.map.off("layeradd", this.layerAddHandler, this), this.Toolbar.toggleButton("deleteLayer", this._globalRemovalMode), this._fireRemovalModeEvent(false);
  }, enableGlobalRemovalMode: function() {
    var t2 = this;
    this._globalRemovalMode = true, this.map.eachLayer(function(e2) {
      (function(t3) {
        return t3.pm && !(t3.pm.options && t3.pm.options.preventMarkerRemoval) && !(t3 instanceof L.LayerGroup);
      })(e2) && e2.on("click", t2.removeLayer, t2);
    }), this.map.on("layeradd", this.layerAddHandler, this), this.Toolbar.toggleButton("deleteLayer", this._globalRemovalMode), this._fireRemovalModeEvent(true);
  }, _fireRemovalModeEvent: function(t2) {
    this.map.fire("pm:globalremovalmodetoggled", { enabled: t2, map: this.map });
  }, toggleGlobalRemovalMode: function() {
    this.globalRemovalEnabled() ? this.disableGlobalRemovalMode() : this.enableGlobalRemovalMode();
  }, globalRemovalEnabled: function() {
    return !!this._globalRemovalMode;
  }, globalEditEnabled: function() {
    return this._globalEditMode;
  }, enableGlobalEditMode: function(t2) {
    var e2 = this.findLayers();
    this._globalEditMode = true, e2.forEach(function(e3) {
      e3.pm.enable(t2);
    }), this.map.on("layeradd", this.layerAddHandler, this), this.Toolbar.toggleButton("editPolygon", this._globalEditMode), this._fireEditModeEvent(true);
  }, disableGlobalEditMode: function() {
    var t2 = this.findLayers();
    this._globalEditMode = false, t2.forEach(function(t3) {
      t3.pm.disable();
    }), this.map.on("layeroff", this.layerAddHandler, this), this.Toolbar.toggleButton("editPolygon", this._globalEditMode), this._fireEditModeEvent(false);
  }, _fireEditModeEvent: function(t2) {
    this.map.fire("pm:globaleditmodetoggled", { enabled: t2, map: this.map });
  }, toggleGlobalEditMode: function(t2) {
    this.globalEditEnabled() ? this.disableGlobalEditMode() : this.enableGlobalEditMode(t2);
  } });
  e.a = o;
}, function(t, e, n) {
  var r = n(52), i = n(109)(function(t2, e2, n2) {
    r(t2, e2, n2);
  });
  t.exports = i;
}, function(t, e, n) {
  var r = n(53), i = n(27), a = n(84), o = n(86), s = n(3), l = n(34), u = n(33);
  t.exports = function c(t2, e2, n2, h, p) {
    t2 !== e2 && a(e2, function(a2, l2) {
      if (p || (p = new r()), s(a2)) o(t2, e2, l2, n2, c, h, p);
      else {
        var f = h ? h(u(t2, l2), a2, l2 + "", t2, e2, p) : void 0;
        f === void 0 && (f = a2), i(t2, l2, f);
      }
    }, l);
  };
}, function(t, e, n) {
  var r = n(9), i = n(59), a = n(60), o = n(61), s = n(62), l = n(63);
  function u(t2) {
    var e2 = this.__data__ = new r(t2);
    this.size = e2.size;
  }
  u.prototype.clear = i, u.prototype["delete"] = a, u.prototype.get = o, u.prototype.has = s, u.prototype.set = l, t.exports = u;
}, function(t, e) {
  t.exports = function() {
    this.__data__ = [], this.size = 0;
  };
}, function(t, e, n) {
  var r = n(10), i = Array.prototype.splice;
  t.exports = function(t2) {
    var e2 = this.__data__, n2 = r(e2, t2);
    return !(n2 < 0 || (n2 == e2.length - 1 ? e2.pop() : i.call(e2, n2, 1), --this.size, 0));
  };
}, function(t, e, n) {
  var r = n(10);
  t.exports = function(t2) {
    var e2 = this.__data__, n2 = r(e2, t2);
    return n2 < 0 ? void 0 : e2[n2][1];
  };
}, function(t, e, n) {
  var r = n(10);
  t.exports = function(t2) {
    return r(this.__data__, t2) > -1;
  };
}, function(t, e, n) {
  var r = n(10);
  t.exports = function(t2, e2) {
    var n2 = this.__data__, i = r(n2, t2);
    return i < 0 ? (++this.size, n2.push([t2, e2])) : n2[i][1] = e2, this;
  };
}, function(t, e, n) {
  var r = n(9);
  t.exports = function() {
    this.__data__ = new r(), this.size = 0;
  };
}, function(t, e) {
  t.exports = function(t2) {
    var e2 = this.__data__, n = e2["delete"](t2);
    return this.size = e2.size, n;
  };
}, function(t, e) {
  t.exports = function(t2) {
    return this.__data__.get(t2);
  };
}, function(t, e) {
  t.exports = function(t2) {
    return this.__data__.has(t2);
  };
}, function(t, e, n) {
  var r = n(9), i = n(24), a = n(26), o = 200;
  t.exports = function(t2, e2) {
    var n2 = this.__data__;
    if (n2 instanceof r) {
      var s = n2.__data__;
      if (!i || s.length < o - 1) return s.push([t2, e2]), this.size = ++n2.size, this;
      n2 = this.__data__ = new a(s);
    }
    return n2.set(t2, e2), this.size = n2.size, this;
  };
}, function(t, e, n) {
  var r = n(15), i = n(68), a = n(3), o = n(70), s = /^\[object .+?Constructor\]$/, l = Function.prototype, u = Object.prototype, c = l.toString, h = u.hasOwnProperty, p = RegExp("^" + c.call(h).replace(/[\\^$.*+?()[\]{}|]/g, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$");
  t.exports = function(t2) {
    return !(!a(t2) || i(t2)) && (r(t2) ? p : s).test(o(t2));
  };
}, function(t, e) {
  var n;
  n = /* @__PURE__ */ function() {
    return this;
  }();
  try {
    n = n || Function("return this")() || (0, eval)("this");
  } catch (r) {
    "object" == typeof window && (n = window);
  }
  t.exports = n;
}, function(t, e, n) {
  var r = n(16), i = Object.prototype, a = i.hasOwnProperty, o = i.toString, s = r ? r.toStringTag : void 0;
  t.exports = function(t2) {
    var e2 = a.call(t2, s), n2 = t2[s];
    try {
      t2[s] = void 0;
      var r2 = true;
    } catch (l) {
    }
    var i2 = o.call(t2);
    return r2 && (e2 ? t2[s] = n2 : delete t2[s]), i2;
  };
}, function(t, e) {
  var n = Object.prototype.toString;
  t.exports = function(t2) {
    return n.call(t2);
  };
}, function(t, e, n) {
  var r = n(69), i = function() {
    var t2 = /[^.]+$/.exec(r && r.keys && r.keys.IE_PROTO || "");
    return t2 ? "Symbol(src)_1." + t2 : "";
  }();
  t.exports = function(t2) {
    return !!i && i in t2;
  };
}, function(t, e, n) {
  var r = n(4)["__core-js_shared__"];
  t.exports = r;
}, function(t, e) {
  var n = Function.prototype.toString;
  t.exports = function(t2) {
    if (null != t2) {
      try {
        return n.call(t2);
      } catch (e2) {
      }
      try {
        return t2 + "";
      } catch (e2) {
      }
    }
    return "";
  };
}, function(t, e) {
  t.exports = function(t2, e2) {
    return null == t2 ? void 0 : t2[e2];
  };
}, function(t, e, n) {
  var r = n(73), i = n(9), a = n(24);
  t.exports = function() {
    this.size = 0, this.__data__ = { hash: new r(), map: new (a || i)(), string: new r() };
  };
}, function(t, e, n) {
  var r = n(74), i = n(75), a = n(76), o = n(77), s = n(78);
  function l(t2) {
    var e2 = -1, n2 = null == t2 ? 0 : t2.length;
    for (this.clear(); ++e2 < n2; ) {
      var r2 = t2[e2];
      this.set(r2[0], r2[1]);
    }
  }
  l.prototype.clear = r, l.prototype["delete"] = i, l.prototype.get = a, l.prototype.has = o, l.prototype.set = s, t.exports = l;
}, function(t, e, n) {
  var r = n(12);
  t.exports = function() {
    this.__data__ = r ? r(null) : {}, this.size = 0;
  };
}, function(t, e) {
  t.exports = function(t2) {
    var e2 = this.has(t2) && delete this.__data__[t2];
    return this.size -= e2 ? 1 : 0, e2;
  };
}, function(t, e, n) {
  var r = n(12), i = "__lodash_hash_undefined__", a = Object.prototype.hasOwnProperty;
  t.exports = function(t2) {
    var e2 = this.__data__;
    if (r) {
      var n2 = e2[t2];
      return n2 === i ? void 0 : n2;
    }
    return a.call(e2, t2) ? e2[t2] : void 0;
  };
}, function(t, e, n) {
  var r = n(12), i = Object.prototype.hasOwnProperty;
  t.exports = function(t2) {
    var e2 = this.__data__;
    return r ? e2[t2] !== void 0 : i.call(e2, t2);
  };
}, function(t, e, n) {
  var r = n(12), i = "__lodash_hash_undefined__";
  t.exports = function(t2, e2) {
    var n2 = this.__data__;
    return this.size += this.has(t2) ? 0 : 1, n2[t2] = r && e2 === void 0 ? i : e2, this;
  };
}, function(t, e, n) {
  var r = n(13);
  t.exports = function(t2) {
    var e2 = r(this, t2)["delete"](t2);
    return this.size -= e2 ? 1 : 0, e2;
  };
}, function(t, e) {
  t.exports = function(t2) {
    var e2 = typeof t2;
    return "string" == e2 || "number" == e2 || "symbol" == e2 || "boolean" == e2 ? "__proto__" !== t2 : null === t2;
  };
}, function(t, e, n) {
  var r = n(13);
  t.exports = function(t2) {
    return r(this, t2).get(t2);
  };
}, function(t, e, n) {
  var r = n(13);
  t.exports = function(t2) {
    return r(this, t2).has(t2);
  };
}, function(t, e, n) {
  var r = n(13);
  t.exports = function(t2, e2) {
    var n2 = r(this, t2), i = n2.size;
    return n2.set(t2, e2), this.size += n2.size == i ? 0 : 1, this;
  };
}, function(t, e, n) {
  var r = n(85)();
  t.exports = r;
}, function(t, e) {
  t.exports = function(t2) {
    return function(e2, n, r) {
      for (var i = -1, a = Object(e2), o = r(e2), s = o.length; s--; ) {
        var l = o[t2 ? s : ++i];
        if (false === n(a[l], l, a)) break;
      }
      return e2;
    };
  };
}, function(t, e, n) {
  var r = n(27), i = n(87), a = n(88), o = n(91), s = n(92), l = n(19), u = n(6), c = n(96), h = n(31), p = n(15), f = n(3), d = n(98), g = n(32), _ = n(33), m = n(102);
  t.exports = function(t2, e2, n2, y, v, b, L2) {
    var k = _(t2, n2), M = _(e2, n2), w = L2.get(M);
    if (w) r(t2, n2, w);
    else {
      var C = b ? b(k, M, n2 + "", t2, e2, L2) : void 0, x = C === void 0;
      if (x) {
        var E = u(M), S = !E && h(M), P = !E && !S && g(M);
        C = M, E || S || P ? u(k) ? C = k : c(k) ? C = o(k) : S ? (x = false, C = i(M, true)) : P ? (x = false, C = a(M, true)) : C = [] : d(M) || l(M) ? (C = k, l(k) ? C = m(k) : f(k) && !p(k) || (C = s(M))) : x = false;
      }
      x && (L2.set(M, C), v(C, M, y, b, L2), L2["delete"](M)), r(t2, n2, C);
    }
  };
}, function(t, e, n) {
  (function(t2) {
    var r = n(4), i = "object" == typeof e && e && !e.nodeType && e, a = i && "object" == typeof t2 && t2 && !t2.nodeType && t2, o = a && a.exports === i ? r.Buffer : void 0, s = o ? o.allocUnsafe : void 0;
    t2.exports = function(t3, e2) {
      if (e2) return t3.slice();
      var n2 = t3.length, r2 = s ? s(n2) : new t3.constructor(n2);
      return t3.copy(r2), r2;
    };
  }).call(e, n(18)(t));
}, function(t, e, n) {
  var r = n(89);
  t.exports = function(t2, e2) {
    var n2 = e2 ? r(t2.buffer) : t2.buffer;
    return new t2.constructor(n2, t2.byteOffset, t2.length);
  };
}, function(t, e, n) {
  var r = n(90);
  t.exports = function(t2) {
    var e2 = new t2.constructor(t2.byteLength);
    return new r(e2).set(new r(t2)), e2;
  };
}, function(t, e, n) {
  var r = n(4).Uint8Array;
  t.exports = r;
}, function(t, e) {
  t.exports = function(t2, e2) {
    var n = -1, r = t2.length;
    for (e2 || (e2 = Array(r)); ++n < r; ) e2[n] = t2[n];
    return e2;
  };
}, function(t, e, n) {
  var r = n(93), i = n(29), a = n(30);
  t.exports = function(t2) {
    return "function" != typeof t2.constructor || a(t2) ? {} : r(i(t2));
  };
}, function(t, e, n) {
  var r = n(3), i = Object.create, a = /* @__PURE__ */ function() {
    function t2() {
    }
    return function(e2) {
      if (!r(e2)) return {};
      if (i) return i(e2);
      t2.prototype = e2;
      var n2 = new t2();
      return t2.prototype = void 0, n2;
    };
  }();
  t.exports = a;
}, function(t, e) {
  t.exports = function(t2, e2) {
    return function(n) {
      return t2(e2(n));
    };
  };
}, function(t, e, n) {
  var r = n(7), i = n(5), a = "[object Arguments]";
  t.exports = function(t2) {
    return i(t2) && r(t2) == a;
  };
}, function(t, e, n) {
  var r = n(20), i = n(5);
  t.exports = function(t2) {
    return i(t2) && r(t2);
  };
}, function(t, e) {
  t.exports = function() {
    return false;
  };
}, function(t, e, n) {
  var r = n(7), i = n(29), a = n(5), o = "[object Object]", s = Function.prototype, l = Object.prototype, u = s.toString, c = l.hasOwnProperty, h = u.call(Object);
  t.exports = function(t2) {
    if (!a(t2) || r(t2) != o) return false;
    var e2 = i(t2);
    if (null === e2) return true;
    var n2 = c.call(e2, "constructor") && e2.constructor;
    return "function" == typeof n2 && n2 instanceof n2 && u.call(n2) == h;
  };
}, function(t, e, n) {
  var r = n(7), i = n(21), a = n(5), o = {};
  o["[object Float32Array]"] = o["[object Float64Array]"] = o["[object Int8Array]"] = o["[object Int16Array]"] = o["[object Int32Array]"] = o["[object Uint8Array]"] = o["[object Uint8ClampedArray]"] = o["[object Uint16Array]"] = o["[object Uint32Array]"] = true, o["[object Arguments]"] = o["[object Array]"] = o["[object ArrayBuffer]"] = o["[object Boolean]"] = o["[object DataView]"] = o["[object Date]"] = o["[object Error]"] = o["[object Function]"] = o["[object Map]"] = o["[object Number]"] = o["[object Object]"] = o["[object RegExp]"] = o["[object Set]"] = o["[object String]"] = o["[object WeakMap]"] = false, t.exports = function(t2) {
    return a(t2) && i(t2.length) && !!o[r(t2)];
  };
}, function(t, e) {
  t.exports = function(t2) {
    return function(e2) {
      return t2(e2);
    };
  };
}, function(t, e, n) {
  (function(t2) {
    var r = n(25), i = "object" == typeof e && e && !e.nodeType && e, a = i && "object" == typeof t2 && t2 && !t2.nodeType && t2, o = a && a.exports === i && r.process, s = function() {
      try {
        var t3 = a && a.require && a.require("util").types;
        return t3 || o && o.binding && o.binding("util");
      } catch (e2) {
      }
    }();
    t2.exports = s;
  }).call(e, n(18)(t));
}, function(t, e, n) {
  var r = n(103), i = n(34);
  t.exports = function(t2) {
    return r(t2, i(t2));
  };
}, function(t, e, n) {
  var r = n(104), i = n(17);
  t.exports = function(t2, e2, n2, a) {
    var o = !n2;
    n2 || (n2 = {});
    for (var s = -1, l = e2.length; ++s < l; ) {
      var u = e2[s], c = a ? a(n2[u], t2[u], u, n2, t2) : void 0;
      c === void 0 && (c = t2[u]), o ? i(n2, u, c) : r(n2, u, c);
    }
    return n2;
  };
}, function(t, e, n) {
  var r = n(17), i = n(11), a = Object.prototype.hasOwnProperty;
  t.exports = function(t2, e2, n2) {
    var o = t2[e2];
    a.call(t2, e2) && i(o, n2) && (n2 !== void 0 || e2 in t2) || r(t2, e2, n2);
  };
}, function(t, e, n) {
  var r = n(106), i = n(19), a = n(6), o = n(31), s = n(22), l = n(32), u = Object.prototype.hasOwnProperty;
  t.exports = function(t2, e2) {
    var n2 = a(t2), c = !n2 && i(t2), h = !n2 && !c && o(t2), p = !n2 && !c && !h && l(t2), f = n2 || c || h || p, d = f ? r(t2.length, String) : [], g = d.length;
    for (var _ in t2) !e2 && !u.call(t2, _) || f && ("length" == _ || h && ("offset" == _ || "parent" == _) || p && ("buffer" == _ || "byteLength" == _ || "byteOffset" == _) || s(_, g)) || d.push(_);
    return d;
  };
}, function(t, e) {
  t.exports = function(t2, e2) {
    for (var n = -1, r = Array(t2); ++n < t2; ) r[n] = e2(n);
    return r;
  };
}, function(t, e, n) {
  var r = n(3), i = n(30), a = n(108), o = Object.prototype.hasOwnProperty;
  t.exports = function(t2) {
    if (!r(t2)) return a(t2);
    var e2 = i(t2), n2 = [];
    for (var s in t2) ("constructor" != s || !e2 && o.call(t2, s)) && n2.push(s);
    return n2;
  };
}, function(t, e) {
  t.exports = function(t2) {
    var e2 = [];
    if (null != t2) for (var n in Object(t2)) e2.push(n);
    return e2;
  };
}, function(t, e, n) {
  var r = n(110), i = n(117);
  t.exports = function(t2) {
    return r(function(e2, n2) {
      var r2 = -1, a = n2.length, o = a > 1 ? n2[a - 1] : void 0, s = a > 2 ? n2[2] : void 0;
      for (o = t2.length > 3 && "function" == typeof o ? (a--, o) : void 0, s && i(n2[0], n2[1], s) && (o = a < 3 ? void 0 : o, a = 1), e2 = Object(e2); ++r2 < a; ) {
        var l = n2[r2];
        l && t2(e2, l, r2, o);
      }
      return e2;
    });
  };
}, function(t, e, n) {
  var r = n(35), i = n(111), a = n(113);
  t.exports = function(t2, e2) {
    return a(i(t2, e2, r), t2 + "");
  };
}, function(t, e, n) {
  var r = n(112), i = Math.max;
  t.exports = function(t2, e2, n2) {
    return e2 = i(e2 === void 0 ? t2.length - 1 : e2, 0), function() {
      for (var a = arguments, o = -1, s = i(a.length - e2, 0), l = Array(s); ++o < s; ) l[o] = a[e2 + o];
      o = -1;
      for (var u = Array(e2 + 1); ++o < e2; ) u[o] = a[o];
      return u[e2] = n2(l), r(t2, this, u);
    };
  };
}, function(t, e) {
  t.exports = function(t2, e2, n) {
    switch (n.length) {
      case 0:
        return t2.call(e2);
      case 1:
        return t2.call(e2, n[0]);
      case 2:
        return t2.call(e2, n[0], n[1]);
      case 3:
        return t2.call(e2, n[0], n[1], n[2]);
    }
    return t2.apply(e2, n);
  };
}, function(t, e, n) {
  var r = n(114), i = n(116)(r);
  t.exports = i;
}, function(t, e, n) {
  var r = n(115), i = n(28), a = n(35), o = i ? function(t2, e2) {
    return i(t2, "toString", { configurable: true, enumerable: false, value: r(e2), writable: true });
  } : a;
  t.exports = o;
}, function(t, e) {
  t.exports = function(t2) {
    return function() {
      return t2;
    };
  };
}, function(t, e) {
  var n = 800, r = 16, i = Date.now;
  t.exports = function(t2) {
    var e2 = 0, a = 0;
    return function() {
      var o = i(), s = r - (o - a);
      if (a = o, s > 0) {
        if (++e2 >= n) return arguments[0];
      } else e2 = 0;
      return t2.apply(void 0, arguments);
    };
  };
}, function(t, e, n) {
  var r = n(11), i = n(20), a = n(22), o = n(3);
  t.exports = function(t2, e2, n2) {
    if (!o(n2)) return false;
    var s = typeof e2;
    return !!("number" == s ? i(n2) && a(e2, n2.length) : "string" == s && e2 in n2) && r(n2[e2], t2);
  };
}, function(t, e) {
  t.exports = { tooltips: { placeMarker: "Click to place marker", firstVertex: "Click to place first vertex", continueLine: "Click to continue drawing", finishLine: "Click any existing marker to finish", finishPoly: "Click first marker to finish", finishRect: "Click to finish", startCircle: "Click to place circle center", finishCircle: "Click to finish circle", placeCircleMarker: "Click to place circle marker" }, actions: { finish: "Finish", cancel: "Cancel", removeLastVertex: "Remove Last Vertex" }, buttonTitles: { drawMarkerButton: "Draw Marker", drawPolyButton: "Draw Polygons", drawLineButton: "Draw Polyline", drawCircleButton: "Draw Circle", drawRectButton: "Draw Rectangle", editButton: "Edit Layers", dragButton: "Drag Layers", cutButton: "Cut Layers", deleteButton: "Remove Layers", drawCircleMarkerButton: "Draw Circle Marker" } };
}, function(t, e) {
  t.exports = { tooltips: { placeMarker: "Platziere den Marker mit Klick", firstVertex: "Platziere den ersten Marker mit Klick", continueLine: "Klicke, um weiter zu zeichnen", finishLine: "Beende mit Klick auf existierenden Marker", finishPoly: "Beende mit Klick auf ersten Marker", finishRect: "Beende mit Klick", startCircle: "Platziere das Kreiszentrum mit Klick", finishCircle: "Beende den Kreis mit Klick", placeCircleMarker: "Platziere den Kreismarker mit Klick" }, actions: { finish: "Beenden", cancel: "Abbrechen", removeLastVertex: "Letzten Vertex löschen" }, buttonTitles: { drawMarkerButton: "Marker zeichnen", drawPolyButton: "Polygon zeichnen", drawLineButton: "Polyline zeichnen", drawCircleButton: "Kreis zeichnen", drawRectButton: "Rechteck zeichnen", editButton: "Layer editieren", dragButton: "Layer bewegen", cutButton: "Layer schneiden", deleteButton: "Layer löschen", drawCircleMarkerButton: "Kreismarker zeichnen" } };
}, function(t, e) {
  t.exports = { tooltips: { placeMarker: "Clicca per posizionare un Marker", firstVertex: "Clicca per posizionare il primo vertice", continueLine: "Clicca per continuare a disegnare", finishLine: "Clicca qualsiasi marker esistente per terminare", finishPoly: "Clicca il primo marker per terminare", finishRect: "Clicca per terminare", startCircle: "Clicca per posizionare il punto centrale del cerchio", finishCircle: "Clicca per terminare il cerchio", placeCircleMarker: "Clicca per posizionare un Marker del cherchio" }, actions: { finish: "Termina", cancel: "Annulla", removeLastVertex: "Rimuovi l'ultimo vertice" }, buttonTitles: { drawMarkerButton: "Disegna Marker", drawPolyButton: "Disegna Poligoni", drawLineButton: "Disegna Polilinea", drawCircleButton: "Disegna Cerchio", drawRectButton: "Disegna Rettangolo", editButton: "Modifica Livelli", dragButton: "Sposta Livelli", cutButton: "Ritaglia Livelli", deleteButton: "Elimina Livelli", drawCircleMarkerButton: "Disegna Marker del Cherchio" } };
}, function(t, e) {
  t.exports = { tooltips: { placeMarker: "Adaugă un punct", firstVertex: "Apasă aici pentru a adăuga primul Vertex", continueLine: "Apasă aici pentru a continua desenul", finishLine: "Apasă pe orice obiect pentru a finisa desenul", finishPoly: "Apasă pe primul obiect pentru a finisa", finishRect: "Apasă pentru a finisa", startCircle: "Apasă pentru a desena un cerc", finishCircle: "Apasă pentru a finisa un cerc", placeCircleMarker: "Adaugă un punct" }, actions: { finish: "Termină", cancel: "Anulează", removeLastVertex: "Șterge ultimul Vertex" }, buttonTitles: { drawMarkerButton: "Adaugă o bulină", drawPolyButton: "Desenează un poligon", drawLineButton: "Desenează o linie", drawCircleButton: "Desenează un cerc", drawRectButton: "Desenează un dreptunghi", editButton: "Editează straturile", dragButton: "Mută straturile", cutButton: "Taie straturile", deleteButton: "Șterge straturile", placeCircleMarker: "Adaugă o bulină" } };
}, function(t, e) {
  t.exports = { tooltips: { placeMarker: "Щелкните, чтобы поместить маркер", firstVertex: "Нажмите, чтобы поместить первый объект", continueLine: "Нажмите, чтобы продолжить рисование", finishLine: "Щелкните любой существующий маркер для завершения", finishPoly: "Выберите первую точку, чтобы закончить", finishRect: "Нажмите, чтобы закончить", startCircle: "Нажмите чтобы добавить круг", finishCircle: "Нажмите чтобы закончить круг", placeCircleMarker: "Click to place circle marker" }, actions: { finish: "Заканчивать", cancel: "Отмена", removeLastVertex: "Удалить последний объект на карте" }, buttonTitles: { drawMarkerButton: "Добавить маркер", drawPolyButton: "Рисовать полигон", drawLineButton: "Рисовать Полилинию", drawCircleButton: "Рисовать круг", drawRectButton: "Рисовать Прямоугольник", editButton: "Редактировать слой", dragButton: "Перетаскивать слой", cutButton: "Вырезать слой", deleteButton: "Удалить слой", placeCircleMarker: "Щелкните, чтобы поместить маркер" } };
}, function(t, e) {
  t.exports = { tooltips: { placeMarker: "Presiona para colocar un marcador", firstVertex: "Presiona para colocar el primer vértice", continueLine: "Presiona para continuar dibujando", finishLine: "Presiona cualquier marcador existente para finalizar", finishPoly: "Presiona el primer marcador para finalizar", finishRect: "Presiona para finalizar", startCircle: "Presiona para colocar el centro del circulo", finishCircle: "Presiona para finalizar el circulo", placeCircleMarker: "Presiona para colocar un marcador de circulo" }, actions: { finish: "Finalizar", cancel: "Cancelar", removeLastVertex: "Remover ultimo vértice" }, buttonTitles: { drawMarkerButton: "Dibujar Marcador", drawPolyButton: "Dibujar Polígono", drawLineButton: "Dibujar Línea", drawCircleButton: "Dibujar Circulo", drawRectButton: "Dibujar Rectángulo", editButton: "Editar Capas", dragButton: "Arrastrar Capas", cutButton: "Cortar Capas", deleteButton: "Remover Capas", drawCircleMarkerButton: "Dibujar Marcador de Circulo" } };
}, function(t, e) {
  t.exports = { tooltips: { placeMarker: "Klik om een marker te plaatsen", firstVertex: "Klik om het eerste punt te plaatsen", continueLine: "Klik om te blijven tekenen", finishLine: "Klik op een bestaand punt om te beëindigen", finishPoly: "Klik op het eerst punt om te beëindigen", finishRect: "Klik om te beëindigen", startCircle: "Klik om het middelpunt te plaatsen", finishCircle: "Klik om de cirkel te beëindigen", placeCircleMarker: "Klik om een marker te plaatsen" }, actions: { finish: "Bewaar", cancel: "Annuleer", removeLastVertex: "Verwijder laatste punt" }, buttonTitles: { drawMarkerButton: "Plaats Marker", drawPolyButton: "Teken een vlak", drawLineButton: "Teken een lijn", drawCircleButton: "Teken een cirkel", drawRectButton: "Teken een vierkant", editButton: "Bewerk", dragButton: "Verplaats", cutButton: "Knip", deleteButton: "Verwijder", drawCircleMarkerButton: "Plaats Marker" } };
}, function(t, e) {
  t.exports = { tooltips: { placeMarker: "Cliquez pour placer un marqueur", firstVertex: "Cliquez pour placer le premier sommet", continueLine: "Cliquez pour continuer à dessiner", finishLine: "Cliquez sur n'importe quel marqueur pour terminer", finishPoly: "Cliquez sur le premier marqueur pour terminer", finishRect: "Cliquez pour terminer", startCircle: "Cliquez pour placer le centre du cercle", finishCircle: "Cliquez pour finir le cercle" }, actions: { finish: "Terminer", cancel: "Annuler", removeLastVertex: "Retirer le dernier sommet" }, buttonTitles: { drawMarkerButton: "Placer des marqueurs", drawPolyButton: "Dessiner des polygones", drawLineButton: "Dessiner des polylignes", drawCircleButton: "Dessiner un cercle", drawRectButton: "Dessiner un rectangle", editButton: "Éditer des calques", dragButton: "Déplacer des calques", cutButton: "Couper des calques", deleteButton: "Supprimer des calques" } };
}, function(t, e) {
  t.exports = { tooltips: { placeMarker: "单击放置标记", firstVertex: "单击放置首个顶点", continueLine: "单击继续绘制", finishLine: "单击任何存在的标记以完成", finishPoly: "单击第一个标记以完成", finishRect: "单击完成", startCircle: "单击放置圆心", finishCircle: "单击完成圆形" }, actions: { finish: "完成", cancel: "取消", removeLastVertex: "移除最后的顶点" }, buttonTitles: { drawMarkerButton: "绘制标记", drawPolyButton: "绘制多边形", drawLineButton: "绘制线段", drawCircleButton: "绘制圆形", drawRectButton: "绘制长方形", editButton: "编辑图层", dragButton: "拖拽图层", cutButton: "剪切图层", deleteButton: "删除图层" } };
}, function(t, e) {
  t.exports = { tooltips: { placeMarker: "Clique para posicionar o marcador", firstVertex: "Clique para posicionar o primeiro vértice", continueLine: "Clique para continuar desenhando", finishLine: "Clique em qualquer marcador existente para finalizar", finishPoly: "Clique no primeiro ponto para fechar o polígono", finishRect: "Clique para finalizar", startCircle: "Clique para posicionar o centro do círculo", finishCircle: "Clique para fechar o círculo" }, actions: { finish: "Finalizar", cancel: "Cancelar", removeLastVertex: "Remover último vértice" }, buttonTitles: { drawMarkerButton: "Desenhar um marcador", drawPolyButton: "Desenhar um polígono", drawLineButton: "Desenhar uma polilinha", drawCircleButton: "Desenhar um círculo", drawRectButton: "Desenhar um retângulo", editButton: "Editar camada(s)", dragButton: "Mover camada(s)", cutButton: "Recortar camada(s)", deleteButton: "Remover camada(s)" } };
}, function(t, e, n) {
  "use strict";
  var r = n(129), i = n(0);
  L.Control.PMButton = r.a;
  var a = L.Class.extend({ options: { drawMarker: true, drawRectangle: true, drawPolyline: true, drawPolygon: true, drawCircle: true, drawCircleMarker: true, editMode: true, dragMode: true, cutPolygon: true, removalMode: true, position: "topleft" }, initialize: function(t2) {
    this.init(t2);
  }, reinit: function() {
    var t2 = this.isVisible;
    this.removeControls(), this._defineButtons(), t2 && this.addControls();
  }, init: function(t2) {
    this.map = t2, this.buttons = {}, this.isVisible = false, this.drawContainer = L.DomUtil.create("div", "leaflet-pm-toolbar leaflet-pm-draw leaflet-bar leaflet-control"), this.editContainer = L.DomUtil.create("div", "leaflet-pm-toolbar leaflet-pm-edit leaflet-bar leaflet-control"), this._defineButtons();
  }, getButtons: function() {
    return this.buttons;
  }, addControls: function() {
    var t2 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : this.options;
    "undefined" != typeof t2.editPolygon && (t2.editMode = t2.editPolygon), "undefined" != typeof t2.deleteLayer && (t2.removalMode = t2.deleteLayer), L.Util.setOptions(this, t2), this.applyIconStyle(), this._showHideButtons(), this.isVisible = true;
  }, applyIconStyle: function() {
    var t2 = this.getButtons(), e2 = { geomanIcons: { drawMarker: "control-icon leaflet-pm-icon-marker", drawPolyline: "control-icon leaflet-pm-icon-polyline", drawRectangle: "control-icon leaflet-pm-icon-rectangle", drawPolygon: "control-icon leaflet-pm-icon-polygon", drawCircle: "control-icon leaflet-pm-icon-circle", drawCircleMarker: "control-icon leaflet-pm-icon-circle-marker", editMode: "control-icon leaflet-pm-icon-edit", dragMode: "control-icon leaflet-pm-icon-drag", cutPolygon: "control-icon leaflet-pm-icon-cut", removalMode: "control-icon leaflet-pm-icon-delete" } };
    for (var n2 in t2) {
      var r2 = t2[n2];
      L.Util.setOptions(r2, { className: e2.geomanIcons[n2] });
    }
  }, removeControls: function() {
    var t2 = this.getButtons();
    for (var e2 in t2) t2[e2].remove();
    this.isVisible = false;
  }, toggleControls: function() {
    var t2 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : this.options;
    this.isVisible ? this.removeControls() : this.addControls(t2);
  }, _addButton: function(t2, e2) {
    return this.buttons[t2] = e2, this.options[t2] = this.options[t2] || false, this.buttons[t2];
  }, triggerClickOnToggledButtons: function(t2) {
    for (var e2 in this.buttons) this.buttons[e2] !== t2 && this.buttons[e2].toggled() && this.buttons[e2]._triggerClick();
  }, toggleButton: function(t2, e2) {
    return "editPolygon" === t2 && (t2 = "editMode"), "deleteLayer" === t2 && (t2 = "removalMode"), this.triggerClickOnToggledButtons(this.buttons[t2]), this.buttons[t2].toggle(e2);
  }, _defineButtons: function() {
    var t2 = this, e2 = { className: "control-icon leaflet-pm-icon-marker", title: Object(i.a)("buttonTitles.drawMarkerButton"), jsClass: "Marker", onClick: function() {
    }, afterClick: function() {
      t2.map.pm.Draw.Marker.toggle();
    }, doToggle: true, toggleStatus: false, disableOtherButtons: true, position: this.options.position, actions: ["cancel"] }, n2 = { title: Object(i.a)("buttonTitles.drawPolyButton"), className: "control-icon leaflet-pm-icon-polygon", jsClass: "Polygon", onClick: function() {
    }, afterClick: function() {
      t2.map.pm.Draw.Polygon.toggle();
    }, doToggle: true, toggleStatus: false, disableOtherButtons: true, position: this.options.position, actions: ["finish", "removeLastVertex", "cancel"] }, r2 = { className: "control-icon leaflet-pm-icon-polyline", title: Object(i.a)("buttonTitles.drawLineButton"), jsClass: "Line", onClick: function() {
    }, afterClick: function() {
      t2.map.pm.Draw.Line.toggle();
    }, doToggle: true, toggleStatus: false, disableOtherButtons: true, position: this.options.position, actions: ["finish", "removeLastVertex", "cancel"] }, a2 = { title: Object(i.a)("buttonTitles.drawCircleButton"), className: "control-icon leaflet-pm-icon-circle", jsClass: "Circle", onClick: function() {
    }, afterClick: function() {
      t2.map.pm.Draw.Circle.toggle();
    }, doToggle: true, toggleStatus: false, disableOtherButtons: true, position: this.options.position, actions: ["cancel"] }, o = { title: Object(i.a)("buttonTitles.drawCircleMarkerButton"), className: "control-icon leaflet-pm-icon-circle-marker", jsClass: "CircleMarker", onClick: function() {
    }, afterClick: function() {
      t2.map.pm.Draw.CircleMarker.toggle();
    }, doToggle: true, toggleStatus: false, disableOtherButtons: true, position: this.options.position, actions: ["cancel"] }, s = { title: Object(i.a)("buttonTitles.drawRectButton"), className: "control-icon leaflet-pm-icon-rectangle", jsClass: "Rectangle", onClick: function() {
    }, afterClick: function() {
      t2.map.pm.Draw.Rectangle.toggle();
    }, doToggle: true, toggleStatus: false, disableOtherButtons: true, position: this.options.position, actions: ["cancel"] }, l = { title: Object(i.a)("buttonTitles.editButton"), className: "control-icon leaflet-pm-icon-edit", onClick: function() {
    }, afterClick: function() {
      t2.map.pm.toggleGlobalEditMode();
    }, doToggle: true, toggleStatus: false, disableOtherButtons: true, position: this.options.position, tool: "edit", actions: ["cancel"] }, u = { title: Object(i.a)("buttonTitles.dragButton"), className: "control-icon leaflet-pm-icon-drag", onClick: function() {
    }, afterClick: function() {
      t2.map.pm.toggleGlobalDragMode();
    }, doToggle: true, toggleStatus: false, disableOtherButtons: true, position: this.options.position, tool: "edit", actions: ["cancel"] }, c = { title: Object(i.a)("buttonTitles.cutButton"), className: "control-icon leaflet-pm-icon-cut", jsClass: "Cut", onClick: function() {
    }, afterClick: function() {
      t2.map.pm.Draw.Cut.toggle({ snappable: true, cursorMarker: true, allowSelfIntersection: false });
    }, doToggle: true, toggleStatus: false, disableOtherButtons: true, position: this.options.position, tool: "edit", actions: ["finish", "removeLastVertex", "cancel"] }, h = { title: Object(i.a)("buttonTitles.deleteButton"), className: "control-icon leaflet-pm-icon-delete", onClick: function() {
    }, afterClick: function() {
      t2.map.pm.toggleGlobalRemovalMode();
    }, doToggle: true, toggleStatus: false, disableOtherButtons: true, position: this.options.position, tool: "edit", actions: ["cancel"] };
    this._addButton("drawMarker", new L.Control.PMButton(e2)), this._addButton("drawPolyline", new L.Control.PMButton(r2)), this._addButton("drawRectangle", new L.Control.PMButton(s)), this._addButton("drawPolygon", new L.Control.PMButton(n2)), this._addButton("drawCircle", new L.Control.PMButton(a2)), this._addButton("drawCircleMarker", new L.Control.PMButton(o)), this._addButton("editMode", new L.Control.PMButton(l)), this._addButton("dragMode", new L.Control.PMButton(u)), this._addButton("cutPolygon", new L.Control.PMButton(c)), this._addButton("removalMode", new L.Control.PMButton(h));
  }, _showHideButtons: function() {
    this.removeControls();
    var t2 = this.getButtons();
    for (var e2 in t2) this.options[e2] && (t2[e2].setPosition(this.options.position), t2[e2].addTo(this.map));
  } });
  e.a = a;
}, function(t, e, n) {
  "use strict";
  var r = n(0), i = L.Control.extend({ options: { position: "topleft" }, initialize: function(t2) {
    this._button = L.Util.setOptions(this, t2);
  }, onAdd: function(t2) {
    return this._map = t2, this._container = "edit" === this._button.tool ? this._map.pm.Toolbar.editContainer : this._map.pm.Toolbar.drawContainer, this.buttonsDomNode = this._makeButton(this._button), this._container.appendChild(this.buttonsDomNode), this._container;
  }, onRemove: function() {
    return this.buttonsDomNode.remove(), this._container;
  }, getText: function() {
    return this._button.text;
  }, getIconUrl: function() {
    return this._button.iconUrl;
  }, destroy: function() {
    this._button = {}, this._update();
  }, toggle: function(t2) {
    return this._button.toggleStatus = "boolean" == typeof t2 ? t2 : !this._button.toggleStatus, this._applyStyleClasses(), this._button.toggleStatus;
  }, toggled: function() {
    return this._button.toggleStatus;
  }, onCreate: function() {
    this.toggle(false);
  }, _triggerClick: function(t2) {
    this._button.onClick(t2), this._clicked(t2), this._button.afterClick(t2);
  }, _makeButton: function(t2) {
    var e2 = this, n2 = L.DomUtil.create("div", "button-container", this._container), i2 = L.DomUtil.create("a", "leaflet-buttons-control-button", n2), a = L.DomUtil.create("div", "leaflet-pm-actions-container", n2), o = t2.actions, s = { cancel: { text: Object(r.a)("actions.cancel"), onClick: function() {
      this._triggerClick();
    } }, removeLastVertex: { text: Object(r.a)("actions.removeLastVertex"), onClick: function() {
      this._map.pm.Draw[t2.jsClass]._removeLastVertex();
    } }, finish: { text: Object(r.a)("actions.finish"), onClick: function(e3) {
      this._map.pm.Draw[t2.jsClass]._finishShape(e3);
    } } };
    o.forEach(function(t3) {
      var n3 = s[t3], r2 = L.DomUtil.create("a", "leaflet-pm-action action-".concat(t3), a);
      r2.innerHTML = n3.text, L.DomEvent.addListener(r2, "click", n3.onClick, e2), L.DomEvent.disableClickPropagation(r2);
    }), t2.toggleStatus && L.DomUtil.addClass(i2, "active");
    var l = L.DomUtil.create("div", "control-icon", i2);
    return t2.title && l.setAttribute("title", t2.title), t2.iconUrl && l.setAttribute("src", t2.iconUrl), t2.className && L.DomUtil.addClass(l, t2.className), L.DomEvent.addListener(i2, "click", function() {
      e2._button.disableOtherButtons && e2._map.pm.Toolbar.triggerClickOnToggledButtons(e2);
    }), L.DomEvent.addListener(i2, "click", this._triggerClick, this), L.DomEvent.disableClickPropagation(i2), n2;
  }, _applyStyleClasses: function() {
    this._container && (this._button.toggleStatus ? L.DomUtil.addClass(this.buttonsDomNode, "active") : L.DomUtil.removeClass(this.buttonsDomNode, "active"));
  }, _clicked: function() {
    this._button.doToggle && this.toggle();
  } });
  e.a = i;
}, function(t, e, n) {
  var r = n(38), i = n(39);
  t.exports = function(t2, e2) {
    for (var n2 = 0, a = (e2 = r(e2, t2)).length; null != t2 && n2 < a; ) t2 = t2[i(e2[n2++])];
    return n2 && n2 == a ? t2 : void 0;
  };
}, function(t, e, n) {
  var r = n(6), i = n(23), a = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/, o = /^\w*$/;
  t.exports = function(t2, e2) {
    if (r(t2)) return false;
    var n2 = typeof t2;
    return !("number" != n2 && "symbol" != n2 && "boolean" != n2 && null != t2 && !i(t2)) || o.test(t2) || !a.test(t2) || null != e2 && t2 in Object(e2);
  };
}, function(t, e, n) {
  var r = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g, i = /\\(\\)?/g, a = n(133)(function(t2) {
    var e2 = [];
    return 46 === t2.charCodeAt(0) && e2.push(""), t2.replace(r, function(t3, n2, r2, a2) {
      e2.push(r2 ? a2.replace(i, "$1") : n2 || t3);
    }), e2;
  });
  t.exports = a;
}, function(t, e, n) {
  var r = n(134), i = 500;
  t.exports = function(t2) {
    var e2 = r(t2, function(t3) {
      return n2.size === i && n2.clear(), t3;
    }), n2 = e2.cache;
    return e2;
  };
}, function(t, e, n) {
  var r = n(26), i = "Expected a function";
  function a(t2, e2) {
    if ("function" != typeof t2 || null != e2 && "function" != typeof e2) throw new TypeError(i);
    var n2 = function() {
      var r2 = arguments, i2 = e2 ? e2.apply(this, r2) : r2[0], a2 = n2.cache;
      if (a2.has(i2)) return a2.get(i2);
      var o = t2.apply(this, r2);
      return n2.cache = a2.set(i2, o) || a2, o;
    };
    return n2.cache = new (a.Cache || r)(), n2;
  }
  a.Cache = r, t.exports = a;
}, function(t, e, n) {
  var r = n(136);
  t.exports = function(t2) {
    return null == t2 ? "" : r(t2);
  };
}, function(t, e, n) {
  var r = n(16), i = n(137), a = n(6), o = n(23), s = 1 / 0, l = r ? r.prototype : void 0, u = l ? l.toString : void 0;
  t.exports = function c(t2) {
    if ("string" == typeof t2) return t2;
    if (a(t2)) return i(t2, c) + "";
    if (o(t2)) return u ? u.call(t2) : "";
    var e2 = t2 + "";
    return "0" == e2 && 1 / t2 == -s ? "-0" : e2;
  };
}, function(t, e) {
  t.exports = function(t2, e2) {
    for (var n = -1, r = null == t2 ? 0 : t2.length, i = Array(r); ++n < r; ) i[n] = e2(t2[n], n, t2);
    return i;
  };
}, function(t, e, n) {
  var r = n(139), i = n(140);
  t.exports = function(t2, e2) {
    return null != t2 && i(t2, e2, r);
  };
}, function(t, e) {
  var n = Object.prototype.hasOwnProperty;
  t.exports = function(t2, e2) {
    return null != t2 && n.call(t2, e2);
  };
}, function(t, e, n) {
  var r = n(38), i = n(19), a = n(6), o = n(22), s = n(21), l = n(39);
  t.exports = function(t2, e2, n2) {
    for (var u = -1, c = (e2 = r(e2, t2)).length, h = false; ++u < c; ) {
      var p = l(e2[u]);
      if (!(h = null != t2 && n2(t2, p))) break;
      t2 = t2[p];
    }
    return h || ++u != c ? h : !!(c = null == t2 ? 0 : t2.length) && s(c) && o(p, c) && (a(t2) || i(t2));
  };
}, function(t, e, n) {
  "use strict";
  var r = n(1), i = n(0);
  r.a.Marker = r.a.extend({ initialize: function(t2) {
    this._map = t2, this._shape = "Marker", this.toolbarButtonName = "drawMarker";
  }, enable: function(t2) {
    var e2 = this;
    L.Util.setOptions(this, t2), this._enabled = true, this._map.on("click", this._createMarker, this), this._map.pm.Toolbar.toggleButton(this.toolbarButtonName, true), this._hintMarker = L.marker([0, 0], this.options.markerStyle), this._hintMarker._pmTempLayer = true, this._hintMarker.addTo(this._map), this.options.tooltips && this._hintMarker.bindTooltip(Object(i.a)("tooltips.placeMarker"), { permanent: true, offset: L.point(0, 10), direction: "bottom", opacity: 0.8 }).openTooltip(), this._layer = this._hintMarker, this._map.on("mousemove", this._syncHintMarker, this), this._map.fire("pm:drawstart", { shape: this._shape, workingLayer: this._layer }), this._map.eachLayer(function(t3) {
      e2.isRelevantMarker(t3) && t3.pm.enable();
    });
  }, disable: function() {
    var t2 = this;
    this._enabled && (this._map.off("click", this._createMarker, this), this._hintMarker.remove(), this._map.off("mousemove", this._syncHintMarker, this), this._map.eachLayer(function(e2) {
      t2.isRelevantMarker(e2) && e2.pm.disable();
    }), this._map.fire("pm:drawend", { shape: this._shape }), this._map.pm.Toolbar.toggleButton(this.toolbarButtonName, false), this.options.snappable && this._cleanupSnapping(), this._enabled = false);
  }, isRelevantMarker: function(t2) {
    return t2 instanceof L.Marker && t2.pm && !t2._pmTempLayer;
  }, enabled: function() {
    return this._enabled;
  }, toggle: function(t2) {
    this.enabled() ? this.disable() : this.enable(t2);
  }, _createMarker: function(t2) {
    if (t2.latlng) {
      this._hintMarker._snapped || this._hintMarker.setLatLng(t2.latlng);
      var e2 = this._hintMarker.getLatLng(), n2 = new L.Marker(e2, this.options.markerStyle);
      n2.addTo(this._map), n2.pm.enable(), this._map.fire("pm:create", { shape: this._shape, marker: n2, layer: n2 }), this._cleanupSnapping();
    }
  }, _syncHintMarker: function(t2) {
    if (this._hintMarker.setLatLng(t2.latlng), this.options.snappable) {
      var e2 = t2;
      e2.target = this._hintMarker, this._handleSnapping(e2);
    }
  } });
}, function(t, e, n) {
  "use strict";
  var r = n(42), i = n.n(r), a = n(1), o = n(0);
  a.a.Line = a.a.extend({ initialize: function(t2) {
    this._map = t2, this._shape = "Line", this.toolbarButtonName = "drawPolyline", this._doesSelfIntersect = false;
  }, enable: function(t2) {
    L.Util.setOptions(this, t2), this.options.finishOnDoubleClick && !this.options.finishOn && (this.options.finishOn = "dblclick"), this._enabled = true, this._layerGroup = new L.LayerGroup(), this._layerGroup._pmTempLayer = true, this._layerGroup.addTo(this._map), this._layer = L.polyline([], this.options.templineStyle), this._layer._pmTempLayer = true, this._layerGroup.addLayer(this._layer), this._hintline = L.polyline([], this.options.hintlineStyle), this._hintline._pmTempLayer = true, this._layerGroup.addLayer(this._hintline), this._hintMarker = L.marker(this._map.getCenter(), { icon: L.divIcon({ className: "marker-icon cursor-marker" }) }), this._hintMarker._pmTempLayer = true, this._layerGroup.addLayer(this._hintMarker), this.options.cursorMarker && L.DomUtil.addClass(this._hintMarker._icon, "visible"), this.options.tooltips && this._hintMarker.bindTooltip(Object(o.a)("tooltips.firstVertex"), { permanent: true, offset: L.point(0, 10), direction: "bottom", opacity: 0.8 }).openTooltip(), this._map._container.style.cursor = "crosshair", this._map.on("click", this._createVertex, this), this.options.finishOn && this._map.on(this.options.finishOn, this._finishShape, this), "dblclick" === this.options.finishOn && (this.tempMapDoubleClickZoomState = this._map.doubleClickZoom._enabled, this.tempMapDoubleClickZoomState && this._map.doubleClickZoom.disable()), this._map.on("mousemove", this._syncHintMarker, this), this._hintMarker.on("move", this._syncHintLine, this), this._map.fire("pm:drawstart", { shape: this._shape, workingLayer: this._layer }), this._map.pm.Toolbar.toggleButton(this.toolbarButtonName, true), this._otherSnapLayers = [];
  }, disable: function() {
    this._enabled && (this._enabled = false, this._map._container.style.cursor = "", this._map.off("click", this._createVertex, this), this._map.off("mousemove", this._syncHintMarker, this), this.options.finishOn && this._map.off(this.options.finishOn, this._finishShape, this), this.tempMapDoubleClickZoomState && this._map.doubleClickZoom.enable(), this._map.removeLayer(this._layerGroup), this._map.fire("pm:drawend", { shape: this._shape }), this._map.pm.Toolbar.toggleButton(this.toolbarButtonName, false), this.options.snappable && this._cleanupSnapping());
  }, enabled: function() {
    return this._enabled;
  }, toggle: function(t2) {
    this.enabled() ? this.disable() : this.enable(t2);
  }, hasSelfIntersection: function() {
    return i()(this._layer.toGeoJSON(15)).features.length > 0;
  }, _syncHintLine: function() {
    var t2 = this._layer.getLatLngs();
    if (t2.length > 0) {
      var e2 = t2[t2.length - 1];
      this._hintline.setLatLngs([e2, this._hintMarker.getLatLng()]);
    }
  }, _syncHintMarker: function(t2) {
    if (this._hintMarker.setLatLng(t2.latlng), this.options.snappable) {
      var e2 = t2;
      e2.target = this._hintMarker, this._handleSnapping(e2);
    }
    this.options.allowSelfIntersection || this._handleSelfIntersection(true, t2.latlng);
  }, _handleSelfIntersection: function(t2, e2) {
    var n2 = L.polyline(this._layer.getLatLngs());
    t2 && (e2 || (e2 = this._hintMarker.getLatLng()), n2.addLatLng(e2));
    var r2 = i()(n2.toGeoJSON(15));
    this._doesSelfIntersect = r2.features.length > 0, this._doesSelfIntersect ? this._hintline.setStyle({ color: "red" }) : this._hintline.setStyle(this.options.hintlineStyle);
  }, _removeLastVertex: function() {
    var t2 = this._layer.getLatLngs(), e2 = t2.pop();
    if (t2.length < 1) this.disable();
    else {
      var n2 = this._layerGroup.getLayers().filter(function(t3) {
        return t3 instanceof L.Marker;
      }).filter(function(t3) {
        return !L.DomUtil.hasClass(t3._icon, "cursor-marker");
      }).find(function(t3) {
        return t3.getLatLng() === e2;
      });
      this._layerGroup.removeLayer(n2), this._layer.setLatLngs(t2), this._syncHintLine();
    }
  }, _createVertex: function(t2) {
    if (this.options.allowSelfIntersection || (this._handleSelfIntersection(true, t2.latlng), !this._doesSelfIntersect)) {
      this._hintMarker._snapped || this._hintMarker.setLatLng(t2.latlng);
      var e2 = this._hintMarker.getLatLng();
      if (e2.equals(this._layer.getLatLngs()[0])) this._finishShape(t2);
      else {
        var n2 = 0 === this._layer.getLatLngs().length;
        this._layer.addLatLng(e2);
        var r2 = this._createMarker(e2, n2);
        this._hintline.setLatLngs([e2, e2]), this._layer.fire("pm:vertexadded", { shape: this._shape, workingLayer: this._layer, marker: r2, latlng: e2 });
      }
    }
  }, _finishShape: function() {
    if (this.options.allowSelfIntersection || (this._handleSelfIntersection(false), !this._doesSelfIntersect)) {
      var t2 = this._layer.getLatLngs();
      if (!(t2.length <= 1)) {
        var e2 = L.polyline(t2, this.options.pathOptions).addTo(this._map);
        this.disable(), this._map.fire("pm:create", { shape: this._shape, layer: e2 }), this.options.snappable && this._cleanupSnapping();
      }
    }
  }, _createMarker: function(t2, e2) {
    var n2 = new L.Marker(t2, { draggable: false, icon: L.divIcon({ className: "marker-icon" }) });
    return n2._pmTempLayer = true, this._layerGroup.addLayer(n2), n2.on("click", this._finishShape, this), e2 && this._hintMarker.setTooltipContent(Object(o.a)("tooltips.continueLine")), 2 === this._layer.getLatLngs().length && this._hintMarker.setTooltipContent(Object(o.a)("tooltips.finishLine")), n2;
  } });
}, function(t, e, n) {
  "use strict";
  var r = n(1), i = n(0);
  r.a.Polygon = r.a.Line.extend({ initialize: function(t2) {
    this._map = t2, this._shape = "Polygon", this.toolbarButtonName = "drawPolygon";
  }, _finishShape: function(t2) {
    if (this.options.allowSelfIntersection || (this._handleSelfIntersection(false), !this._doesSelfIntersect)) {
      var e2 = this._layer.getLatLngs();
      if (console.log(e2), !(e2.length <= 2)) {
        t2 && "dblclick" === t2.type && e2.splice(e2.length - 1, 1);
        var n2 = L.polygon(e2, this.options.pathOptions).addTo(this._map);
        this.disable(), this._map.fire("pm:create", { shape: this._shape, layer: n2 }), this._cleanupSnapping(), this._otherSnapLayers.splice(this._tempSnapLayerIndex, 1), delete this._tempSnapLayerIndex;
      }
    }
  }, _createMarker: function(t2, e2) {
    var n2 = new L.Marker(t2, { draggable: false, icon: L.divIcon({ className: "marker-icon" }) });
    return n2._pmTempLayer = true, this._layerGroup.addLayer(n2), e2 && (n2.on("click", this._finishShape, this), this._tempSnapLayerIndex = this._otherSnapLayers.push(n2) - 1, this.options.snappable && this._cleanupSnapping()), e2 && this._hintMarker.setTooltipContent(Object(i.a)("tooltips.continueLine")), 3 === this._layer.getLatLngs().length && this._hintMarker.setTooltipContent(Object(i.a)("tooltips.finishPoly")), n2;
  } });
}, function(t, e, n) {
  "use strict";
  var r = n(1), i = n(0);
  r.a.Rectangle = r.a.extend({ initialize: function(t2) {
    this._map = t2, this._shape = "Rectangle", this.toolbarButtonName = "drawRectangle";
  }, enable: function(t2) {
    if (L.Util.setOptions(this, t2), this._enabled = true, this._layerGroup = new L.LayerGroup(), this._layerGroup._pmTempLayer = true, this._layerGroup.addTo(this._map), this._layer = L.rectangle([[0, 0], [0, 0]], this.options.pathOptions), this._layer._pmTempLayer = true, this._startMarker = L.marker([0, 0], { icon: L.divIcon({ className: "marker-icon rect-start-marker" }), draggable: true, zIndexOffset: 100, opacity: this.options.cursorMarker ? 1 : 0 }), this._startMarker._pmTempLayer = true, this._layerGroup.addLayer(this._startMarker), this._hintMarker = L.marker([0, 0], { icon: L.divIcon({ className: "marker-icon cursor-marker" }) }), this._hintMarker._pmTempLayer = true, this._layerGroup.addLayer(this._hintMarker), this.options.tooltips && this._hintMarker.bindTooltip(Object(i.a)("tooltips.firstVertex"), { permanent: true, offset: L.point(0, 10), direction: "bottom", opacity: 0.8 }).openTooltip(), this.options.cursorMarker) {
      L.DomUtil.addClass(this._hintMarker._icon, "visible"), this._styleMarkers = [];
      for (var e2 = 0; e2 < 2; e2 += 1) {
        var n2 = L.marker([0, 0], { icon: L.divIcon({ className: "marker-icon rect-style-marker" }), draggable: true, zIndexOffset: 100 });
        n2._pmTempLayer = true, this._layerGroup.addLayer(n2), this._styleMarkers.push(n2);
      }
    }
    this._map._container.style.cursor = "crosshair", this._map.on("click", this._placeStartingMarkers, this), this._map.on("mousemove", this._syncHintMarker, this), this._map.fire("pm:drawstart", { shape: this._shape, workingLayer: this._layer }), this._map.pm.Toolbar.toggleButton(this.toolbarButtonName, true), this._otherSnapLayers = [];
  }, disable: function() {
    this._enabled && (this._enabled = false, this._map._container.style.cursor = "", this._map.off("click", this._finishShape, this), this._map.off("click", this._placeStartingMarkers, this), this._map.off("mousemove", this._syncHintMarker, this), this._map.removeLayer(this._layerGroup), this._map.fire("pm:drawend", { shape: this._shape }), this._map.pm.Toolbar.toggleButton(this.toolbarButtonName, false), this.options.snappable && this._cleanupSnapping());
  }, enabled: function() {
    return this._enabled;
  }, toggle: function(t2) {
    this.enabled() ? this.disable() : this.enable(t2);
  }, _placeStartingMarkers: function(t2) {
    this._hintMarker._snapped || this._hintMarker.setLatLng(t2.latlng);
    var e2 = this._hintMarker.getLatLng();
    L.DomUtil.addClass(this._startMarker._icon, "visible"), this._startMarker.setLatLng(e2), this.options.cursorMarker && this._styleMarkers && this._styleMarkers.forEach(function(t3) {
      L.DomUtil.addClass(t3._icon, "visible"), t3.setLatLng(e2);
    }), this._map.off("click", this._placeStartingMarkers, this), this._map.on("click", this._finishShape, this), this._hintMarker.setTooltipContent(Object(i.a)("tooltips.finishRect")), this._setRectangleOrigin();
  }, _setRectangleOrigin: function() {
    var t2 = this._startMarker.getLatLng();
    t2 && (this._layerGroup.addLayer(this._layer), this._layer.setLatLngs([t2, t2]), this._hintMarker.on("move", this._syncRectangleSize, this));
  }, _syncHintMarker: function(t2) {
    if (this._hintMarker.setLatLng(t2.latlng), this.options.snappable) {
      var e2 = t2;
      e2.target = this._hintMarker, this._handleSnapping(e2);
    }
  }, _syncRectangleSize: function() {
    var t2 = this, e2 = this._startMarker.getLatLng(), n2 = this._hintMarker.getLatLng();
    if (this._layer.setBounds([e2, n2]), this.options.cursorMarker && this._styleMarkers) {
      var r2 = [];
      this._findCorners().forEach(function(e3) {
        e3.equals(t2._startMarker.getLatLng()) || e3.equals(t2._hintMarker.getLatLng()) || r2.push(e3);
      }), r2.forEach(function(e3, n3) {
        t2._styleMarkers[n3].setLatLng(e3);
      });
    }
  }, _finishShape: function(t2) {
    var e2 = this._startMarker.getLatLng(), n2 = t2.latlng, r2 = L.rectangle([e2, n2], this.options.pathOptions).addTo(this._map);
    this.disable(), this._map.fire("pm:create", { shape: this._shape, layer: r2 });
  }, _findCorners: function() {
    var t2 = this._layer.getBounds();
    return [t2.getNorthWest(), t2.getNorthEast(), t2.getSouthEast(), t2.getSouthWest()];
  } });
}, function(t, e, n) {
  "use strict";
  var r = n(1), i = n(0);
  r.a.Circle = r.a.extend({ initialize: function(t2) {
    this._map = t2, this._shape = "Circle", this.toolbarButtonName = "drawCircle";
  }, enable: function(t2) {
    L.Util.setOptions(this, t2), this.options.radius = 0, this._enabled = true, this._layerGroup = new L.LayerGroup(), this._layerGroup._pmTempLayer = true, this._layerGroup.addTo(this._map), this._layer = L.circle([0, 0], this.options.templineStyle), this._layer._pmTempLayer = true, this._layerGroup.addLayer(this._layer), this._centerMarker = L.marker([0, 0], { icon: L.divIcon({ className: "marker-icon" }), draggable: false, zIndexOffset: 100 }), this._centerMarker._pmTempLayer = true, this._layerGroup.addLayer(this._centerMarker), this._hintMarker = L.marker([0, 0], { icon: L.divIcon({ className: "marker-icon cursor-marker" }) }), this._hintMarker._pmTempLayer = true, this._layerGroup.addLayer(this._hintMarker), this.options.cursorMarker && L.DomUtil.addClass(this._hintMarker._icon, "visible"), this.options.tooltips && this._hintMarker.bindTooltip(Object(i.a)("tooltips.startCircle"), { permanent: true, offset: L.point(0, 10), direction: "bottom", opacity: 0.8 }).openTooltip(), this._hintline = L.polyline([], this.options.hintlineStyle), this._hintline._pmTempLayer = true, this._layerGroup.addLayer(this._hintline), this._map._container.style.cursor = "crosshair", this._map.on("click", this._placeCenterMarker, this), this._map.on("mousemove", this._syncHintMarker, this), this._map.fire("pm:drawstart", { shape: this._shape, workingLayer: this._layer }), this._map.pm.Toolbar.toggleButton(this.toolbarButtonName, true), this._otherSnapLayers = [];
  }, disable: function() {
    this._enabled && (this._enabled = false, this._map._container.style.cursor = "", this._map.off("click", this._finishShape, this), this._map.off("click", this._placeCenterMarker, this), this._map.off("mousemove", this._syncHintMarker, this), this._map.removeLayer(this._layerGroup), this._map.fire("pm:drawend", { shape: this._shape }), this._map.pm.Toolbar.toggleButton(this.toolbarButtonName, false), this.options.snappable && this._cleanupSnapping());
  }, enabled: function() {
    return this._enabled;
  }, toggle: function(t2) {
    this.enabled() ? this.disable() : this.enable(t2);
  }, _syncHintLine: function() {
    var t2 = this._centerMarker.getLatLng();
    this._hintline.setLatLngs([t2, this._hintMarker.getLatLng()]);
  }, _syncCircleRadius: function() {
    var t2 = this._centerMarker.getLatLng(), e2 = this._hintMarker.getLatLng(), n2 = t2.distanceTo(e2);
    this._layer.setRadius(n2);
  }, _syncHintMarker: function(t2) {
    if (this._hintMarker.setLatLng(t2.latlng), this.options.snappable) {
      var e2 = t2;
      e2.target = this._hintMarker, this._handleSnapping(e2);
    }
  }, _placeCenterMarker: function(t2) {
    this._hintMarker._snapped || this._hintMarker.setLatLng(t2.latlng);
    var e2 = this._hintMarker.getLatLng();
    this._centerMarker.setLatLng(e2), this._map.off("click", this._placeCenterMarker, this), this._map.on("click", this._finishShape, this), this._placeCircleCenter();
  }, _placeCircleCenter: function() {
    var t2 = this._centerMarker.getLatLng();
    t2 && (this._layer.setLatLng(t2), this._hintMarker.on("move", this._syncHintLine, this), this._hintMarker.on("move", this._syncCircleRadius, this), this._hintMarker.setTooltipContent(Object(i.a)("tooltips.finishCircle")), this._layer.fire("pm:centerplaced", { shape: this._shape, workingLayer: this._layer, latlng: t2 }));
  }, _finishShape: function(t2) {
    var e2 = this._centerMarker.getLatLng(), n2 = t2.latlng, r2 = e2.distanceTo(n2), i2 = Object.assign({}, this.options.pathOptions, { radius: r2 }), a = L.circle(e2, i2).addTo(this._map);
    this.disable(), this._map.fire("pm:create", { shape: this._shape, layer: a });
  }, _createMarker: function(t2) {
    var e2 = new L.Marker(t2, { draggable: false, icon: L.divIcon({ className: "marker-icon" }) });
    return e2._pmTempLayer = true, this._layerGroup.addLayer(e2), e2;
  } });
}, function(t, e, n) {
  "use strict";
  var r = n(1), i = n(0);
  r.a.CircleMarker = r.a.Marker.extend({ initialize: function(t2) {
    this._map = t2, this._shape = "CircleMarker", this.toolbarButtonName = "drawCircleMarker";
  }, enable: function(t2) {
    var e2 = this;
    L.Util.setOptions(this, t2), this._enabled = true, this._map.on("click", this._createMarker, this), this._map.pm.Toolbar.toggleButton(this.toolbarButtonName, true), this._hintMarker = L.circleMarker([0, 0], this.options.templineStyle), this._hintMarker._pmTempLayer = true, this._hintMarker.addTo(this._map), this.options.tooltips && this._hintMarker.bindTooltip(Object(i.a)("tooltips.placeCircleMarker"), { permanent: true, offset: L.point(0, 10), direction: "bottom", opacity: 0.8 }).openTooltip(), this._layer = this._hintMarker, this._map.on("mousemove", this._syncHintMarker, this), this._map.fire("pm:drawstart", { shape: this._shape, workingLayer: this._layer }), this._map.eachLayer(function(t3) {
      e2.isRelevantMarker(t3) && t3.pm.enable();
    });
  }, isRelevantMarker: function(t2) {
    return t2 instanceof L.CircleMarker && !(t2 instanceof L.Circle) && t2.pm && !t2._pmTempLayer;
  }, _createMarker: function(t2) {
    if (t2.latlng) {
      this._hintMarker._snapped || this._hintMarker.setLatLng(t2.latlng);
      var e2 = this._hintMarker.getLatLng(), n2 = L.circleMarker(e2, this.options.pathOptions);
      n2.addTo(this._map), n2.pm.enable(), this._map.fire("pm:create", { shape: this._shape, marker: n2, layer: n2 }), this._cleanupSnapping();
    }
  } });
}, function(t, e, n) {
  "use strict";
  var r = n(148), i = n.n(r), a = n(149), o = n(1);
  o.a.Cut = o.a.Polygon.extend({ initialize: function(t2) {
    this._map = t2, this._shape = "Cut", this.toolbarButtonName = "cutPolygon";
  }, _cut: function(t2) {
    var e2 = this, n2 = this._map._layers;
    Object.keys(n2).map(function(t3) {
      return n2[t3];
    }).filter(function(t3) {
      return t3.pm;
    }).filter(function(t3) {
      return t3 instanceof L.Polygon;
    }).filter(function(e3) {
      return e3 !== t2;
    }).filter(function(e3) {
      try {
        return !!i()(t2.toGeoJSON(15), e3.toGeoJSON(15));
      } catch (n3) {
        return console.error("You cant cut polygons with self-intersections"), false;
      }
    }).forEach(function(n3) {
      var r2 = Object(a.a)(n3.toGeoJSON(15), t2.toGeoJSON(15)), i2 = L.geoJSON(r2, n3.options).addTo(e2._map);
      i2.addTo(e2._map), i2.pm.enable(e2.options), i2.pm.disable(), n3.fire("pm:cut", { shape: e2._shape, layer: i2, originalLayer: n3 }), e2._map.fire("pm:cut", { shape: e2._shape, layer: i2, originalLayer: n3 }), n3._pmTempLayer = true, t2._pmTempLayer = true, n3.remove(), t2.remove(), 0 === i2.getLayers().length && e2._map.pm.removeLayer({ target: i2 });
    });
  }, _finishShape: function() {
    if (this.options.allowSelfIntersection || (this._handleSelfIntersection(false), !this._doesSelfIntersect)) {
      var t2 = this._layer.getLatLngs(), e2 = L.polygon(t2, this.options.pathOptions);
      this._cut(e2), this.disable(), this._cleanupSnapping(), this._otherSnapLayers.splice(this._tempSnapLayerIndex, 1), delete this._tempSnapLayerIndex;
    }
  } });
}, function(t, e, n) {
  "use strict";
  var r = this && this.__importStar || function(t2) {
    if (t2 && t2.__esModule) return t2;
    var e2 = {};
    if (null != t2) for (var n2 in t2) Object.hasOwnProperty.call(t2, n2) && (e2[n2] = t2[n2]);
    return e2["default"] = t2, e2;
  };
  Object.defineProperty(e, "__esModule", { value: true });
  var i = n(8), a = n(43), o = r(n(44));
  e["default"] = function s(t2, e2, n2) {
    void 0 === n2 && (n2 = {});
    var r2 = a.getGeom(t2), l = a.getGeom(e2);
    if ("Polygon" === r2.type && "Polygon" === l.type) {
      var u = o.intersection(r2.coordinates, l.coordinates);
      if (null === u || 0 === u.length) return null;
      if (1 === u.length) {
        var c = u[0][0][0], h = u[0][0][u[0][0].length - 1];
        return c[0] === h[0] && c[1] === h[1] ? i.polygon(u[0], n2.properties) : null;
      }
      return i.multiPolygon(u, n2.properties);
    }
    if ("MultiPolygon" === r2.type) {
      for (var p = [], f = 0, d = r2.coordinates; f < d.length; f++) {
        var g = d[f], _ = s(a.getGeom(i.polygon(g)), l);
        if (_) {
          var m = a.getGeom(_);
          if ("Polygon" === m.type) p.push(m.coordinates);
          else {
            if ("MultiPolygon" !== m.type) throw new Error("intersection is invalid");
            p = p.concat(m.coordinates);
          }
        }
      }
      return 0 === p.length ? null : 1 === p.length ? i.polygon(p[0], n2.properties) : i.multiPolygon(p, n2.properties);
    }
    if ("MultiPolygon" === l.type) return s(l, r2);
    throw new Error("poly1 and poly2 must be either polygons or multiPolygons");
  };
}, function(t, e, n) {
  "use strict";
  var r = n(44), i = (n.n(r), n(150)), a = n.n(i), o = n(8), s = (n.n(o), n(43)), l = (n.n(s), n(45));
  n.n(l);
  function u(t2) {
    switch (t2.type) {
      case "Polygon":
        return a()(t2) > 1 ? t2 : null;
      case "MultiPolygon":
        var e2 = [];
        if (Object(l.flattenEach)(t2, function(t3) {
          a()(t3) > 1 && e2.push(t3.geometry.coordinates);
        }), e2.length) return { type: "MultiPolygon", coordinates: e2 };
    }
  }
  e.a = function(t2, e2) {
    var n2 = Object(s.getGeom)(t2), i2 = Object(s.getGeom)(e2), a2 = t2.properties || {};
    if (n2 = u(n2), i2 = u(i2), !n2) return null;
    if (!i2) return Object(o.feature)(n2, a2);
    var l2 = r.diff(n2.coordinates, i2.coordinates);
    return 0 === l2.length ? null : 1 === l2.length ? Object(o.polygon)(l2[0], a2) : Object(o.multiPolygon)(l2, a2);
  };
}, function(t, e, n) {
  "use strict";
  Object.defineProperty(e, "__esModule", { value: true });
  var r = n(45), i = 6378137;
  function a(t2) {
    var e2 = 0;
    if (t2 && t2.length > 0) {
      e2 += Math.abs(o(t2[0]));
      for (var n2 = 1; n2 < t2.length; n2++) e2 -= Math.abs(o(t2[n2]));
    }
    return e2;
  }
  function o(t2) {
    var e2, n2, r2, a2, o2, l, u = 0, c = t2.length;
    if (c > 2) {
      for (l = 0; l < c; l++) l === c - 2 ? (r2 = c - 2, a2 = c - 1, o2 = 0) : l === c - 1 ? (r2 = c - 1, a2 = 0, o2 = 1) : (r2 = l, a2 = l + 1, o2 = l + 2), e2 = t2[r2], n2 = t2[a2], u += (s(t2[o2][0]) - s(e2[0])) * Math.sin(s(n2[1]));
      u = u * i * i / 2;
    }
    return u;
  }
  function s(t2) {
    return t2 * Math.PI / 180;
  }
  e["default"] = function(t2) {
    return r.geomReduce(t2, function(t3, e2) {
      return t3 + function(t4) {
        var e3, n2 = 0;
        switch (t4.type) {
          case "Polygon":
            return a(t4.coordinates);
          case "MultiPolygon":
            for (e3 = 0; e3 < t4.coordinates.length; e3++) n2 += a(t4.coordinates[e3]);
            return n2;
          case "Point":
          case "MultiPoint":
          case "LineString":
          case "MultiLineString":
            return 0;
        }
        return 0;
      }(e2);
    }, 0);
  };
}, function(t, e, n) {
  "use strict";
  var r = { enableLayerDrag: function() {
    if (this._layer instanceof L.Marker) this._layer.dragging.enable();
    else {
      this._tempDragCoord = null;
      var t2 = this._layer._path ? this._layer._path : this._layer._renderer._container;
      L.DomUtil.addClass(t2, "leaflet-pm-draggable"), this._originalMapDragState = this._layer._map.dragging._enabled, this._safeToCacheDragState = true, this._layer.on("mousedown", this._dragMixinOnMouseDown, this);
    }
  }, disableLayerDrag: function() {
    if (this._layer instanceof L.Marker) this._layer.dragging.disable();
    else {
      var t2 = this._layer._path ? this._layer._path : this._layer._renderer._container;
      L.DomUtil.removeClass(t2, "leaflet-pm-draggable"), this._safeToCacheDragState = false, this._layer.off("mousedown", this._dragMixinOnMouseDown, this);
    }
  }, _dragMixinOnMouseUp: function() {
    var t2 = this, e2 = this._layer._path ? this._layer._path : this._layer._renderer._container;
    return this._originalMapDragState && this._layer._map.dragging.enable(), this._safeToCacheDragState = true, this._layer._map.off("mousemove", this._dragMixinOnMouseMove, this), this._layer._map.off("mouseup", this._dragMixinOnMouseUp, this), !!this._dragging && (window.setTimeout(function() {
      t2._dragging = false, L.DomUtil.removeClass(e2, "leaflet-pm-dragging"), t2._layer.fire("pm:dragend"), t2._fireEdit();
    }, 10), true);
  }, _dragMixinOnMouseMove: function(t2) {
    var e2 = this._layer._path ? this._layer._path : this._layer._renderer._container;
    this._dragging || (this._dragging = true, L.DomUtil.addClass(e2, "leaflet-pm-dragging"), this._layer.bringToFront(), this._originalMapDragState && this._layer._map.dragging.disable(), this._layer.fire("pm:dragstart")), this._onLayerDrag(t2);
  }, _dragMixinOnMouseDown: function(t2) {
    t2.originalEvent.button > 0 || (this._safeToCacheDragState && (this._originalMapDragState = this._layer._map.dragging._enabled, this._safeToCacheDragState = false), this._tempDragCoord = t2.latlng, this._layer._map.on("mouseup", this._dragMixinOnMouseUp, this), this._layer._map.on("mousemove", this._dragMixinOnMouseMove, this));
  }, dragging: function() {
    return this._dragging;
  }, _onLayerDrag: function(t2) {
    var e2 = t2.latlng, n2 = e2.lat - this._tempDragCoord.lat, r2 = e2.lng - this._tempDragCoord.lng;
    if (this._layer instanceof L.CircleMarker) this._layer.setLatLng(e2);
    else {
      var i = function t3(e3) {
        return e3.map(function(e4) {
          return Array.isArray(e4) ? t3(e4) : { lat: e4.lat + n2, lng: e4.lng + r2 };
        });
      }(this._layer.getLatLngs());
      this._layer.setLatLngs(i);
    }
    this._tempDragCoord = e2, this._layer.fire("pm:drag", t2);
  } };
  e.a = r;
}, function(t, e, n) {
  "use strict";
  n(2).a.LayerGroup = L.Class.extend({ initialize: function(t2) {
    var e2 = this;
    this._layerGroup = t2, this._layers = this.findLayers(), this._layers.forEach(function(t3) {
      return e2._initLayer(t3);
    }), this._layerGroup.on("layeradd", function(t3) {
      t3.target._pmTempLayer || (e2._layers = e2.findLayers(), t3.layer.pm && e2._initLayer(t3.layer), t3.target.pm.enabled() && e2.enable(e2.getOptions()));
    });
  }, findLayers: function() {
    var t2 = this._layerGroup.getLayers();
    return t2 = (t2 = (t2 = t2.filter(function(t3) {
      return !(t3 instanceof L.LayerGroup);
    })).filter(function(t3) {
      return !!t3.pm;
    })).filter(function(t3) {
      return !t3._pmTempLayer;
    });
  }, _initLayer: function(t2) {
    var e2 = this;
    ["pm:edit", "pm:update", "pm:remove", "pm:dragstart", "pm:drag", "pm:dragend", "pm:snap", "pm:unsnap", "pm:cut", "pm:intersect", "pm:raiseMarkers", "pm:markerdragend", "pm:markerdragstart", "pm:vertexadded", "pm:vertexremoved", "pm:centerplaced"].forEach(function(n2) {
      t2.on(n2, e2._fireEvent, e2);
    }), t2.pm._layerGroup = this._layerGroup;
  }, _fireEvent: function(t2) {
    this._layerGroup.fireEvent(t2.type, t2);
  }, toggleEdit: function(t2) {
    this._options = t2, this._layers.forEach(function(e2) {
      e2.pm.toggleEdit(t2);
    });
  }, enable: function(t2) {
    this._options = t2, this._layers.forEach(function(e2) {
      e2.pm.enable(t2);
    });
  }, disable: function() {
    this._layers.forEach(function(t2) {
      t2.pm.disable();
    });
  }, enabled: function() {
    var t2 = this._layers.find(function(t3) {
      return t3.pm.enabled();
    });
    return !!t2;
  }, dragging: function() {
    var t2 = this._layers.find(function(t3) {
      return t3.pm.dragging();
    });
    return !!t2;
  }, getOptions: function() {
    return this._options;
  } });
}, function(t, e, n) {
  "use strict";
  var r = n(2);
  r.a.Marker = r.a.extend({ initialize: function(t2) {
    this._layer = t2, this._enabled = false, this._layer.on("dragend", this._onDragEnd, this);
  }, toggleEdit: function(t2) {
    this.enabled() ? this.disable() : this.enable(t2);
  }, enable: function() {
    var t2 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : { draggable: true, snappable: true };
    L.Util.setOptions(this, t2), this._map = this._layer._map, this.enabled() || (this._enabled = true, this.options.preventMarkerRemoval || this._layer.on("contextmenu", this._removeMarker, this), this.options.draggable && this._layer.dragging.enable(), this.options.snappable && this._initSnappableMarkers());
  }, enabled: function() {
    return this._enabled;
  }, disable: function() {
    this._enabled = false, this._layer.dragging && this._layer.dragging.disable(), this._layer.off("contextmenu", this._removeMarker, this), this._layerEdited && this._layer.fire("pm:update", {}), this._layerEdited = false;
  }, _removeMarker: function(t2) {
    var e2 = t2.target;
    e2.remove(), e2.fire("pm:remove");
  }, _onDragEnd: function(t2) {
    t2.target.fire("pm:edit"), this._layerEdited = true;
  }, _initSnappableMarkers: function() {
    var t2 = this._layer;
    this.options.snapDistance = this.options.snapDistance || 30, t2.off("drag", this._handleSnapping, this), t2.on("drag", this._handleSnapping, this), t2.off("dragend", this._cleanupSnapping, this), t2.on("dragend", this._cleanupSnapping, this), t2.off("pm:dragstart", this._unsnap, this), t2.on("pm:dragstart", this._unsnap, this);
  } });
}, function(t, e, n) {
  "use strict";
  var r = n(42), i = n.n(r), a = n(37), o = n.n(a), s = n(2), l = n(41), u = n(0);
  s.a.Line = s.a.extend({ initialize: function(t2) {
    this._layer = t2, this._enabled = false;
  }, toggleEdit: function(t2) {
    return this.enabled() ? this.disable() : this.enable(t2), this.enabled();
  }, enable: function(t2) {
    L.Util.setOptions(this, t2), this._map = this._layer._map, this._map && (this.enabled() || this.disable(), this._enabled = true, this._initMarkers(), this._layer.on("remove", this._onLayerRemove, this), this.options.allowSelfIntersection || this._layer.on("pm:vertexremoved", this._handleSelfIntersectionOnVertexRemoval, this), this.options.allowSelfIntersection || (this.cachedColor || (this.cachedColor = this._layer.options.color), this.isRed = false, this._handleLayerStyle()));
  }, _onLayerRemove: function(t2) {
    this.disable(t2.target);
  }, enabled: function() {
    return this._enabled;
  }, disable: function() {
    var t2 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : this._layer;
    if (!this.enabled()) return false;
    if (t2.pm._dragging) return false;
    t2.pm._enabled = false, t2.pm._markerGroup.clearLayers(), t2.off("mousedown"), t2.off("mouseup"), this._layer.off("remove", this._onLayerRemove, this), this.options.allowSelfIntersection || this._layer.off("pm:vertexremoved", this._handleSelfIntersectionOnVertexRemoval);
    var e2 = t2._path ? t2._path : this._layer._renderer._container;
    return L.DomUtil.removeClass(e2, "leaflet-pm-draggable"), this.hasSelfIntersection() && L.DomUtil.removeClass(e2, "leaflet-pm-invalid"), this._layerEdited && this._layer.fire("pm:update", {}), this._layerEdited = false, true;
  }, hasSelfIntersection: function() {
    return i()(this._layer.toGeoJSON(15)).features.length > 0;
  }, _handleSelfIntersectionOnVertexRemoval: function() {
    this._handleLayerStyle(true), this.hasSelfIntersection() && (this._layer.setLatLngs(this._coordsBeforeEdit), this._coordsBeforeEdit = null, this._initMarkers());
  }, _handleLayerStyle: function(t2) {
    var e2 = this, n2 = this._layer;
    if (this.hasSelfIntersection()) {
      if (this.isRed) return;
      t2 ? (n2.setStyle({ color: "red" }), this.isRed = true, window.setTimeout(function() {
        n2.setStyle({ color: e2.cachedColor }), e2.isRed = false;
      }, 200)) : (n2.setStyle({ color: "red" }), this.isRed = true), this._layer.fire("pm:intersect", { intersection: i()(this._layer.toGeoJSON(15)) });
    } else n2.setStyle({ color: this.cachedColor }), this.isRed = false;
  }, _initMarkers: function() {
    var t2 = this, e2 = this._map, n2 = this._layer.getLatLngs();
    this._markerGroup && this._markerGroup.clearLayers(), this._markerGroup = new L.LayerGroup(), this._markerGroup._pmTempLayer = true, e2.addLayer(this._markerGroup);
    this._markers = function r2(e3) {
      if (Array.isArray(e3[0])) return e3.map(r2, t2);
      var n3 = e3.map(t2._createMarker, t2);
      return e3.map(function(r3, i2) {
        var a2 = t2.isPolygon() ? (i2 + 1) % e3.length : i2 + 1;
        return t2._createMiddleMarker(n3[i2], n3[a2]);
      }), n3;
    }(n2), this.options.snappable && this._initSnappableMarkers();
  }, _createMarker: function(t2) {
    var e2 = new L.Marker(t2, { draggable: true, icon: L.divIcon({ className: "marker-icon" }) });
    return e2._pmTempLayer = true, e2.on("dragstart", this._onMarkerDragStart, this), e2.on("move", this._onMarkerDrag, this), e2.on("dragend", this._onMarkerDragEnd, this), this.options.preventMarkerRemoval || e2.on("contextmenu", this._removeMarker, this), this._markerGroup.addLayer(e2), e2;
  }, _createMiddleMarker: function(t2, e2) {
    var n2 = this;
    if (!t2 || !e2) return false;
    var r2 = l.a.calcMiddleLatLng(this._map, t2.getLatLng(), e2.getLatLng()), i2 = this._createMarker(r2), a2 = L.divIcon({ className: "marker-icon marker-icon-middle" });
    return i2.setIcon(a2), t2._middleMarkerNext = i2, e2._middleMarkerPrev = i2, i2.on("click", function() {
      var r3 = L.divIcon({ className: "marker-icon" });
      i2.setIcon(r3), n2._addMarker(i2, t2, e2);
    }), i2.on("movestart", function() {
      i2.on("moveend", function() {
        var t3 = L.divIcon({ className: "marker-icon" });
        i2.setIcon(t3), i2.off("moveend");
      }), n2._addMarker(i2, t2, e2);
    }), i2;
  }, _addMarker: function(t2, e2, n2) {
    t2.off("movestart"), t2.off("click");
    var r2 = t2.getLatLng(), i2 = this._layer._latlngs, a2 = this.findDeepMarkerIndex(this._markers, e2), s2 = a2.indexPath, l2 = a2.index, u2 = a2.parentPath, c = s2.length > 1 ? o()(i2, u2) : i2, h = s2.length > 1 ? o()(this._markers, u2) : this._markers;
    c.splice(l2 + 1, 0, r2), h.splice(l2 + 1, 0, t2), this._layer.setLatLngs(i2), this._createMiddleMarker(e2, t2), this._createMiddleMarker(t2, n2), this._fireEdit(), this._layer.fire("pm:vertexadded", { layer: this._layer, marker: t2, indexPath: this.findDeepMarkerIndex(this._markers, t2).indexPath, latlng: r2 }), this.options.snappable && this._initSnappableMarkers();
  }, _removeMarker: function(t2) {
    if (!this.options.allowSelfIntersection) {
      var e2 = this._layer.getLatLngs();
      this._coordsBeforeEdit = JSON.parse(JSON.stringify(e2));
    }
    var n2 = t2.target, r2 = this._layer.getLatLngs(), i2 = this.findDeepMarkerIndex(this._markers, n2), a2 = i2.indexPath, s2 = i2.index, l2 = i2.parentPath;
    if (a2) {
      var c, h, p = a2.length > 1 ? o()(r2, l2) : r2, f = a2.length > 1 ? o()(this._markers, l2) : this._markers;
      if (p.splice(s2, 1), this._layer.setLatLngs(r2), p.length <= 1 && (p.splice(0, p.length), this._layer.setLatLngs(r2), this.disable(), this.enable(this.options)), Object(u.b)(r2) && this._layer.remove(), n2._middleMarkerPrev && this._markerGroup.removeLayer(n2._middleMarkerPrev), n2._middleMarkerNext && this._markerGroup.removeLayer(n2._middleMarkerNext), this._markerGroup.removeLayer(n2), this.isPolygon() ? (c = (s2 + 1) % f.length, h = (s2 + (f.length - 1)) % f.length) : (h = s2 - 1 < 0 ? void 0 : s2 - 1, c = s2 + 1 >= f.length ? void 0 : s2 + 1), c !== h) {
        var d = f[h], g = f[c];
        this._createMiddleMarker(d, g);
      }
      f.splice(s2, 1), this._fireEdit(), this._layer.fire("pm:vertexremoved", { layer: this._layer, marker: n2, indexPath: a2 });
    }
  }, findDeepMarkerIndex: function(t2, e2) {
    var n2;
    t2.some(/* @__PURE__ */ function i2(t3) {
      return function(r3, a2) {
        var o2 = t3.concat(a2);
        return r3._leaflet_id === e2._leaflet_id ? (n2 = o2, true) : Array.isArray(r3) && r3.some(i2(o2));
      };
    }([]));
    var r2 = {};
    return n2 && (r2 = { indexPath: n2, index: n2[n2.length - 1], parentPath: n2.slice(0, n2.length - 1) }), r2;
  }, updatePolygonCoordsFromMarkerDrag: function(t2) {
    var e2 = this._layer.getLatLngs(), n2 = t2.getLatLng(), r2 = this.findDeepMarkerIndex(this._markers, t2), i2 = r2.indexPath, a2 = r2.index, s2 = r2.parentPath;
    (i2.length > 1 ? o()(e2, s2) : e2).splice(a2, 1, n2), this._layer.setLatLngs(e2);
  }, _onMarkerDrag: function(t2) {
    var e2 = t2.target, n2 = this.findDeepMarkerIndex(this._markers, e2), r2 = n2.indexPath, i2 = n2.index, a2 = n2.parentPath;
    if (r2) {
      this.updatePolygonCoordsFromMarkerDrag(e2);
      var s2 = r2.length > 1 ? o()(this._markers, a2) : this._markers, u2 = (i2 + 1) % s2.length, c = (i2 + (s2.length - 1)) % s2.length, h = e2.getLatLng(), p = s2[c].getLatLng(), f = s2[u2].getLatLng();
      if (e2._middleMarkerNext) {
        var d = l.a.calcMiddleLatLng(this._map, h, f);
        e2._middleMarkerNext.setLatLng(d);
      }
      if (e2._middleMarkerPrev) {
        var g = l.a.calcMiddleLatLng(this._map, h, p);
        e2._middleMarkerPrev.setLatLng(g);
      }
      this.options.allowSelfIntersection || this._handleLayerStyle();
    }
  }, _onMarkerDragEnd: function(t2) {
    var e2 = t2.target, n2 = this.findDeepMarkerIndex(this._markers, e2).indexPath;
    if (!this.options.allowSelfIntersection && this.hasSelfIntersection()) return this._layer.setLatLngs(this._coordsBeforeEdit), this._coordsBeforeEdit = null, this._initMarkers(), void this._handleLayerStyle();
    this._layer.fire("pm:markerdragend", { markerEvent: t2, indexPath: n2 }), this._fireEdit();
  }, _onMarkerDragStart: function(t2) {
    var e2 = t2.target, n2 = this.findDeepMarkerIndex(this._markers, e2).indexPath;
    this._layer.fire("pm:markerdragstart", { markerEvent: t2, indexPath: n2 }), this.options.allowSelfIntersection || (this._coordsBeforeEdit = this._layer.getLatLngs());
  }, _fireEdit: function() {
    this._layerEdited = true, this._layer.fire("pm:edit");
  } });
}, function(t, e, n) {
  "use strict";
  var r = n(2);
  r.a.Polygon = r.a.Line.extend({});
}, function(t, e, n) {
  "use strict";
  var r = n(2);
  function i(t2, e2) {
    return function(t3) {
      if (Array.isArray(t3)) return t3;
    }(t2) || function(t3, e3) {
      var n2 = [], r2 = true, i2 = false, a = void 0;
      try {
        for (var o, s = t3[Symbol.iterator](); !(r2 = (o = s.next()).done) && (n2.push(o.value), !e3 || n2.length !== e3); r2 = true) ;
      } catch (l) {
        i2 = true, a = l;
      } finally {
        try {
          r2 || null == s["return"] || s["return"]();
        } finally {
          if (i2) throw a;
        }
      }
      return n2;
    }(t2, e2) || function() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    }();
  }
  r.a.Rectangle = r.a.Polygon.extend({ _initMarkers: function() {
    var t2 = this._map, e2 = this._findCorners();
    this._markerGroup && this._markerGroup.clearLayers(), this._markerGroup = new L.LayerGroup(), this._markerGroup._pmTempLayer = true, t2.addLayer(this._markerGroup), this._markers = [], this._markers[0] = e2.map(this._createMarker, this);
    var n2 = i(this._markers, 1);
    this._cornerMarkers = n2[0], this.options.snappable && this._initSnappableMarkers();
  }, _createMarker: function(t2, e2) {
    var n2 = new L.Marker(t2, { draggable: true, icon: L.divIcon({ className: "marker-icon" }) });
    return n2._origLatLng = t2, n2._index = e2, n2._pmTempLayer = true, n2.on("dragstart", this._onMarkerDragStart, this), n2.on("drag", this._onMarkerDrag, this), n2.on("dragend", this._onMarkerDragEnd, this), n2.on("pm:snap", this._adjustRectangleForMarkerSnap, this), this.options.preventMarkerRemoval || n2.on("contextmenu", this._removeMarker, this), this._markerGroup.addLayer(n2), n2;
  }, _removeMarker: function() {
    return null;
  }, _onMarkerDragStart: function(t2) {
    var e2 = t2.target, n2 = this._findCorners();
    e2._oppositeCornerLatLng = n2[(e2._index + 2) % 4], e2._snapped = false, this._layer.fire("pm:markerdragstart", { markerEvent: t2 });
  }, _onMarkerDrag: function(t2) {
    var e2 = t2.target;
    e2._index !== void 0 && (e2._snapped || this._adjustRectangleForMarkerMove(e2));
  }, _onMarkerDragEnd: function(t2) {
    var e2 = this._findCorners();
    this._adjustAllMarkers(e2), this._cornerMarkers.forEach(function(t3) {
      delete t3._oppositeCornerLatLng;
    }), this._layer.setLatLngs(e2), this._layer.fire("pm:markerdragend", { markerEvent: t2 }), this._fireEdit();
  }, _adjustRectangleForMarkerMove: function(t2) {
    L.extend(t2._origLatLng, t2._latlng);
    var e2 = t2.getLatLng();
    this._layer.setBounds(L.latLngBounds(e2, t2._oppositeCornerLatLng)), this._adjustAdjacentMarkers(t2), this._layer.redraw();
  }, _adjustRectangleForMarkerSnap: function(t2) {
    if (this.options.snappable) {
      var e2 = t2.target;
      this._adjustRectangleForMarkerMove(e2);
    }
  }, _adjustAllMarkers: function(t2) {
    t2.length && 4 === t2.length ? this._cornerMarkers.forEach(function(e2, n2) {
      e2.setLatLng(t2[n2]);
    }) : console.error("_adjustAllMarkers() requires an array of EXACTLY 4 LatLng coordinates");
  }, _adjustAdjacentMarkers: function(t2) {
    if (t2 && t2.getLatLng && t2._oppositeCornerLatLng) {
      var e2 = t2.getLatLng(), n2 = t2._oppositeCornerLatLng, r2 = [];
      this._findCorners().forEach(function(t3) {
        t3.equals(e2) || t3.equals(n2) || r2.push(t3);
      });
      var i2 = 0;
      2 === r2.length && this._cornerMarkers.forEach(function(t3) {
        var a = t3.getLatLng();
        a.equals(e2) || a.equals(n2) || (t3.setLatLng(r2[i2]), i2 += 1);
      });
    } else console.error("_adjustAdjacentMarkers() requires a valid Marker object");
  }, _findCorners: function() {
    var t2 = this._layer.getBounds();
    return [t2.getNorthWest(), t2.getNorthEast(), t2.getSouthEast(), t2.getSouthWest()];
  } });
}, function(t, e, n) {
  "use strict";
  var r = n(2);
  r.a.Circle = r.a.extend({ initialize: function(t2) {
    this._layer = t2, this._enabled = false;
  }, toggleEdit: function(t2) {
    this.enabled() ? this.disable() : this.enable(t2);
  }, enabled: function() {
    return this._enabled;
  }, enable: function(t2) {
    var e2 = this;
    L.Util.setOptions(this, t2), this._map = this._layer._map, this.enabled() || this.disable(), this._enabled = true, this._initMarkers(), this._layer.on("remove", function(t3) {
      e2.disable(t3.target);
    });
  }, disable: function() {
    var t2 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : this._layer;
    if (!this.enabled()) return false;
    if (t2.pm._dragging) return false;
    t2.pm._enabled = false, t2.pm._helperLayers.clearLayers(), t2.off("mousedown"), t2.off("mouseup");
    var e2 = t2._path ? t2._path : this._layer._renderer._container;
    return L.DomUtil.removeClass(e2, "leaflet-pm-draggable"), this._layerEdited && this._layer.fire("pm:update", {}), this._layerEdited = false, true;
  }, _initMarkers: function() {
    var t2 = this._map;
    this._helperLayers && this._helperLayers.clearLayers(), this._helperLayers = new L.LayerGroup(), this._helperLayers._pmTempLayer = true, this._helperLayers.addTo(t2);
    var e2 = this._layer.getLatLng(), n2 = this._layer._radius, r2 = this._getLatLngOnCircle(e2, n2);
    this._centerMarker = this._createCenterMarker(e2), this._outerMarker = this._createOuterMarker(r2), this._markers = [this._centerMarker, this._outerMarker], this._createHintLine(this._centerMarker, this._outerMarker), this.options.snappable && this._initSnappableMarkers();
  }, _getLatLngOnCircle: function(t2, e2) {
    var n2 = this._map.project(t2), r2 = L.point(n2.x + e2, n2.y);
    return this._map.unproject(r2);
  }, _resizeCircle: function() {
    this._syncHintLine(), this._syncCircleRadius();
  }, _moveCircle: function(t2) {
    var e2 = t2.latlng;
    this._layer.setLatLng(e2);
    var n2 = this._layer._radius, r2 = this._getLatLngOnCircle(e2, n2);
    this._outerMarker.setLatLng(r2), this._syncHintLine(), this._layer.fire("pm:centerplaced", { layer: this._layer, latlng: e2 });
  }, _onMarkerDragStart: function(t2) {
    this._layer.fire("pm:markerdragstart", { markerEvent: t2 });
  }, _onMarkerDragEnd: function(t2) {
    this._fireEdit(), this._layer.fire("pm:markerdragend", { markerEvent: t2 });
  }, _syncCircleRadius: function() {
    var t2 = this._centerMarker.getLatLng(), e2 = this._outerMarker.getLatLng(), n2 = t2.distanceTo(e2);
    this._layer.setRadius(n2);
  }, _syncHintLine: function() {
    var t2 = this._centerMarker.getLatLng(), e2 = this._outerMarker.getLatLng();
    this._hintline.setLatLngs([t2, e2]);
  }, _createHintLine: function(t2, e2) {
    var n2 = t2.getLatLng(), r2 = e2.getLatLng();
    this._hintline = L.polyline([n2, r2], this.options.hintlineStyle), this._hintline._pmTempLayer = true, this._helperLayers.addLayer(this._hintline);
  }, _createCenterMarker: function(t2) {
    var e2 = this._createMarker(t2);
    return L.DomUtil.addClass(e2._icon, "leaflet-pm-draggable"), e2.on("drag", this._moveCircle, this), e2;
  }, _createOuterMarker: function(t2) {
    var e2 = this._createMarker(t2);
    return e2.on("drag", this._resizeCircle, this), e2;
  }, _createMarker: function(t2) {
    var e2 = new L.Marker(t2, { draggable: true, icon: L.divIcon({ className: "marker-icon" }) });
    return e2._origLatLng = t2, e2._pmTempLayer = true, e2.on("dragstart", this._onMarkerDragStart, this), e2.on("dragend", this._onMarkerDragEnd, this), this._helperLayers.addLayer(e2), e2;
  }, _fireEdit: function() {
    this._layer.fire("pm:edit"), this._layerEdited = true;
  } });
}, function(t, e, n) {
  "use strict";
  var r = n(2);
  r.a.CircleMarker = r.a.extend({ initialize: function(t2) {
    this._layer = t2, this._enabled = false;
  }, toggleEdit: function(t2) {
    this.enabled() ? this.disable() : this.enable(t2);
  }, enabled: function() {
    return this._enabled;
  }, enable: function() {
    var t2 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : { draggable: true, snappable: true };
    L.Util.setOptions(this, t2), this._map = this._layer._map, this._map && (this.enabled() || this.disable(), this._enabled = true, this.options.preventMarkerRemoval || this._layer.on("contextmenu", this._removeMarker, this), this.options.draggable && this.enableLayerDrag(), this.options.snappable && this._initSnappableMarkers(), this._layer.on("pm:dragend", this._onMarkerDragEnd, this));
  }, disable: function() {
    var t2 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : this._layer;
    if (!this.enabled()) return false;
    if (t2.pm._dragging) return false;
    if (t2.pm._enabled = false, t2._path) {
      var e2 = t2._path;
      L.DomUtil.removeClass(e2, "leaflet-pm-draggable");
    }
    return this._layerEdited && this._layer.fire("pm:update", {}), this._layerEdited = false, true;
  }, _moveMarker: function(t2) {
    var e2 = t2.latlng;
    this._layer.setLatLng(e2).redraw();
  }, _removeMarker: function() {
    this._layer.fire("pm:remove"), this._layer.remove();
  }, _fireEdit: function() {
    this._layer.fire("pm:edit"), this._layerEdited = true;
  }, _onMarkerDragEnd: function(t2) {
    this._layer.fire("pm:markerdragend", { markerEvent: t2 }), this._fireEdit();
  }, _initSnappableMarkers: function() {
    var t2 = this._layer;
    this.options.snapDistance = this.options.snapDistance || 30, t2.off("pm:drag", this._handleSnapping, this), t2.on("pm:drag", this._handleSnapping, this), t2.off("pm:dragend", this._cleanupSnapping, this), t2.on("pm:dragend", this._cleanupSnapping, this), t2.off("pm:dragstart", this._unsnap, this), t2.on("pm:dragstart", this._unsnap, this);
  } });
}, function(t, e) {
}, function(t, e) {
}]);
//# sourceMappingURL=leaflet__pm.js.map
